{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["vSVH1hiXNGHM","vc-25Gnv-x9N"]},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["\n","#Analisis de datos de los disparos realizados por Stephen Curry y LeBron James durante la temporada 2023\n","\n"],"metadata":{"id":"BNjoSH9u7q00"}},{"cell_type":"code","source":[],"metadata":{"id":"0J2xH1BY3J3E"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##Importamos Librerias necesarias\n"],"metadata":{"id":"BIIr4vgN9eqM"}},{"cell_type":"code","source":["import numpy as np\n","import pandas as pd\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","%matplotlib inline"],"metadata":{"id":"pXTkvJ7v9hnc"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Carga de los datos con Chunks"],"metadata":{"id":"g-vuPCUj77F-"}},{"cell_type":"markdown","source":["### Montamos Google Drive en este notebook"],"metadata":{"id":"1dFGFqSa9t1V"}},{"cell_type":"code","metadata":{"id":"D3MEt92VCEzV","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728026946562,"user_tz":-120,"elapsed":21061,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"8549c5c0-d71c-48ad-dfe0-f34d1eb265af"},"source":["from google.colab import drive\n","drive.mount('/content/gdrive')"],"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/gdrive\n"]}]},{"cell_type":"markdown","source":["#### Carga de datos"],"metadata":{"id":"EYBDaFrD-be2"}},{"cell_type":"code","source":["df = pd.read_csv('/content/gdrive/MyDrive/3_stephen_curry_shot_chart_2023.csv')\n","\n","df2 = pd.read_csv('/content/gdrive/MyDrive/1_lebron_james_shot_chart_1_2023.csv')\n","\n","chunk_size = 500\n","\n","for gm_chunk in pd.read_csv('/content/gdrive/MyDrive/3_stephen_curry_shot_chart_2023.csv', chunksize=chunk_size):\n","    print(gm_chunk.shape)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RErdVuFW84Ne","executionInfo":{"status":"ok","timestamp":1727800964597,"user_tz":-120,"elapsed":302,"user":{"displayName":"Claudia Carratal√° Lillo","userId":"16858630753452070713"}},"outputId":"86bafdda-b0e6-43d7-9994-aef4445e6363"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(500, 15)\n","(500, 15)\n","(434, 15)\n"]}]},{"cell_type":"markdown","source":["## Preprocesamiento de datos para trabajar\n"],"metadata":{"id":"nHVwTTOqp_F_"}},{"cell_type":"code","source":["#new_df = df.assign(Player_Name= \"Stephen Curry\")\n","#new_df2 = df2.assign(Player_Name= \"LeBron James\")\n","\n","#final_df = pd.merge(new_df, new_df2, how='outer')\n","#final_df_3 = final_df\n","#final_df_4 = final_df\n","\n","#final_final_df = final_df"],"metadata":{"id":"0We99zQNhtYV"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["####Preprocesamiento para eliminar columnas poco interesantes"],"metadata":{"id":"Oh060cYgrfdZ"}},{"cell_type":"code","source":["#final_final_df = final_final_df.drop(['season', 'opponent', 'team'], axis=1)\n","#final_final_df.head()"],"metadata":{"id":"5Og6FHixqDqI","colab":{"base_uri":"https://localhost:8080/","height":206},"executionInfo":{"status":"ok","timestamp":1727800024055,"user_tz":-120,"elapsed":365,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"23e12a6a-323a-4c27-97a7-443ab0c55497"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   top  left          date      qtr time_remaining  result  shot_type  \\\n","0   63   300  Oct 18, 2022  1st Qtr           7:27   False          2   \n","1  133   389  Oct 18, 2022  1st Qtr           7:22    True          2   \n","2  326   247  Oct 18, 2022  1st Qtr           7:11   False          3   \n","3  249    89  Oct 18, 2022  1st Qtr           5:16   False          3   \n","4  282   158  Oct 18, 2022  1st Qtr           3:52   False          3   \n","\n","   distance_ft  lead  lebron_team_score  opponent_team_score  color  \\\n","0            6  True                  9                    6    red   \n","1           17  True                 11                    6  green   \n","2           27  True                 11                    6    red   \n","3           25  True                 19                   13    red   \n","4           24  True                 22                   17    red   \n","\n","     Player_Name  \n","0  Stephen Curry  \n","1  Stephen Curry  \n","2  Stephen Curry  \n","3  Stephen Curry  \n","4  Stephen Curry  "],"text/html":["\n","  <div id=\"df-6b7bc00e-7c5b-48a5-90b4-07cf79de659a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","      <th>left</th>\n","      <th>date</th>\n","      <th>qtr</th>\n","      <th>time_remaining</th>\n","      <th>result</th>\n","      <th>shot_type</th>\n","      <th>distance_ft</th>\n","      <th>lead</th>\n","      <th>lebron_team_score</th>\n","      <th>opponent_team_score</th>\n","      <th>color</th>\n","      <th>Player_Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>300</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1st Qtr</td>\n","      <td>7:27</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>133</td>\n","      <td>389</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1st Qtr</td>\n","      <td>7:22</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>green</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>326</td>\n","      <td>247</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1st Qtr</td>\n","      <td>7:11</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>27</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>249</td>\n","      <td>89</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1st Qtr</td>\n","      <td>5:16</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>True</td>\n","      <td>19</td>\n","      <td>13</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>282</td>\n","      <td>158</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1st Qtr</td>\n","      <td>3:52</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>24</td>\n","      <td>True</td>\n","      <td>22</td>\n","      <td>17</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6b7bc00e-7c5b-48a5-90b4-07cf79de659a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6b7bc00e-7c5b-48a5-90b4-07cf79de659a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6b7bc00e-7c5b-48a5-90b4-07cf79de659a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-3a0bb309-6d08-4fb9-9ae8-042694a310b0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3a0bb309-6d08-4fb9-9ae8-042694a310b0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-3a0bb309-6d08-4fb9-9ae8-042694a310b0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_final_df","summary":"{\n  \"name\": \"final_final_df\",\n  \"rows\": 2967,\n  \"fields\": [\n    {\n      \"column\": \"top\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 26,\n        \"max\": 389,\n        \"num_unique_values\": 339,\n        \"samples\": [\n          237,\n          39,\n          68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106,\n        \"min\": -3,\n        \"max\": 483,\n        \"num_unique_values\": 457,\n        \"samples\": [\n          447,\n          344,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 115,\n        \"samples\": [\n          \"Dec 9, 2022\",\n          \"Oct 27, 2022\",\n          \"Mar 9, 2023\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 6,\n        \"samples\": [\n          \"1st Qtr\",\n          \"2nd Qtr\",\n          \"2nd OT\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1139,\n        \"samples\": [\n          \"06:47\",\n          \"09:53\",\n          \"4:21\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distance_ft\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 36,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          12,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lebron_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35,\n        \"min\": 0,\n        \"max\": 140,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          47,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"opponent_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35,\n        \"min\": 0,\n        \"max\": 135,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          89,\n          78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"green\",\n          \"red\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Player_Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"LeBron James\",\n          \"Stephen Curry\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":48}]},{"cell_type":"markdown","source":["####Preprocesamiento para modificar columnas existentes"],"metadata":{"id":"2IQBrUgArl-g"}},{"cell_type":"code","source":["###Convertir el tiempo restante de cuarto a segundos\n","\n","#for index, row in final_final_df.iterrows():\n","#  auxiliarDate = final_final_df['time_remaining'][index]\n","#  min, sec = auxiliarDate.split(\":\")\n","#  secs = 60 * int(min) + int(sec)\n","#  final_final_df['time_remaining'][index] = secs\n","\n","#for index, row in final_final_df.iterrows():\n","#  auxiliarDate = final_final_df['qtr'][index]\n","#  if auxiliarDate == \"1st Qtr\":\n","#    final_final_df['qtr'][index] = 1\n","#  elif auxiliarDate == \"2nd Qtr\":\n","#    final_final_df['qtr'][index] = 2\n","#  elif auxiliarDate == \"3rd Qtr\":\n","#    final_final_df['qtr'][index] = 3\n","#  elif auxiliarDate == \"4th Qtr\":\n","#    final_final_df['qtr'][index] = 4\n","#  else:\n","#    final_final_df['qtr'][index] = 0\n","\n","\n","#final_final_df[['qtr']] = final_final_df[['qtr']].astype(int)\n","#final_final_df[['time_remaining']] = final_final_df[['time_remaining']].astype(int)\n","  ###Cambiar la columna color a categoria"],"metadata":{"id":"-PAESNfBqOOJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#final_final_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"m-oDd2Q_vW45","executionInfo":{"status":"ok","timestamp":1727800096604,"user_tz":-120,"elapsed":372,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"2881699e-0c9a-4462-9492-d072e6ac60ad"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   top  left          date  qtr  time_remaining  result  shot_type  \\\n","0   63   300  Oct 18, 2022    1             447   False          2   \n","1  133   389  Oct 18, 2022    1             442    True          2   \n","2  326   247  Oct 18, 2022    1             431   False          3   \n","3  249    89  Oct 18, 2022    1             316   False          3   \n","4  282   158  Oct 18, 2022    1             232   False          3   \n","\n","   distance_ft  lead  lebron_team_score  opponent_team_score  color  \\\n","0            6  True                  9                    6    red   \n","1           17  True                 11                    6  green   \n","2           27  True                 11                    6    red   \n","3           25  True                 19                   13    red   \n","4           24  True                 22                   17    red   \n","\n","     Player_Name  \n","0  Stephen Curry  \n","1  Stephen Curry  \n","2  Stephen Curry  \n","3  Stephen Curry  \n","4  Stephen Curry  "],"text/html":["\n","  <div id=\"df-5f9bc4f7-6c6b-4e2f-9a90-f8012af6e524\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","      <th>left</th>\n","      <th>date</th>\n","      <th>qtr</th>\n","      <th>time_remaining</th>\n","      <th>result</th>\n","      <th>shot_type</th>\n","      <th>distance_ft</th>\n","      <th>lead</th>\n","      <th>lebron_team_score</th>\n","      <th>opponent_team_score</th>\n","      <th>color</th>\n","      <th>Player_Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>300</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1</td>\n","      <td>447</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>133</td>\n","      <td>389</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1</td>\n","      <td>442</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>green</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>326</td>\n","      <td>247</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1</td>\n","      <td>431</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>27</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>249</td>\n","      <td>89</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1</td>\n","      <td>316</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>True</td>\n","      <td>19</td>\n","      <td>13</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>282</td>\n","      <td>158</td>\n","      <td>Oct 18, 2022</td>\n","      <td>1</td>\n","      <td>232</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>24</td>\n","      <td>True</td>\n","      <td>22</td>\n","      <td>17</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5f9bc4f7-6c6b-4e2f-9a90-f8012af6e524')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5f9bc4f7-6c6b-4e2f-9a90-f8012af6e524 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5f9bc4f7-6c6b-4e2f-9a90-f8012af6e524');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-5609f9a8-1de4-4816-ad69-ab5f8c50317e\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-5609f9a8-1de4-4816-ad69-ab5f8c50317e')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-5609f9a8-1de4-4816-ad69-ab5f8c50317e button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_final_df","summary":"{\n  \"name\": \"final_final_df\",\n  \"rows\": 2967,\n  \"fields\": [\n    {\n      \"column\": \"top\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 26,\n        \"max\": 389,\n        \"num_unique_values\": 339,\n        \"samples\": [\n          237,\n          39,\n          68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106,\n        \"min\": -3,\n        \"max\": 483,\n        \"num_unique_values\": 457,\n        \"samples\": [\n          447,\n          344,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 115,\n        \"samples\": [\n          \"Dec 9, 2022\",\n          \"Oct 27, 2022\",\n          \"Mar 9, 2023\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 207,\n        \"min\": 0,\n        \"max\": 713,\n        \"num_unique_values\": 696,\n        \"samples\": [\n          294,\n          172,\n          226\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distance_ft\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 36,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          12,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lebron_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35,\n        \"min\": 0,\n        \"max\": 140,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          47,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"opponent_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35,\n        \"min\": 0,\n        \"max\": 135,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          89,\n          78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"green\",\n          \"red\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Player_Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"LeBron James\",\n          \"Stephen Curry\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":50}]},{"cell_type":"code","source":["#final_final_df['date'] = pd.to_datetime(final_final_df['date'])"],"metadata":{"id":"ljG6eChi31k9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["#### Preprocesamiento para a√±adir nuevas columnas"],"metadata":{"id":"nPKK_1qTruw5"}},{"cell_type":"code","source":["#final_final_df = final_final_df.assign(time_remaining_total= 0)\n","\n","#for index, row in final_final_df.iterrows():\n","#  auxiliarDate = final_final_df['time_remaining'][index]\n","#  final_final_df['time_remaining_total'][index] = auxiliarDate + ((4 - final_final_df['qtr'][index]) * 720)"],"metadata":{"id":"f4YQDhOpr934"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#final_final_df['dif_points'] = final_final_df['lebron_team_score'] - final_final_df['opponent_team_score']"],"metadata":{"id":"fI_9x6KR3iLr"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#final_final_df.info()\n","#final_final_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":806},"id":"tiC6d9x-sHKa","executionInfo":{"status":"ok","timestamp":1727800362781,"user_tz":-120,"elapsed":390,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"907a27fb-7c79-4a9f-8286-401720b6bc45"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 2967 entries, 0 to 2966\n","Data columns (total 15 columns):\n"," #   Column                Non-Null Count  Dtype         \n","---  ------                --------------  -----         \n"," 0   top                   2967 non-null   int64         \n"," 1   left                  2967 non-null   int64         \n"," 2   date                  2967 non-null   datetime64[ns]\n"," 3   qtr                   2967 non-null   int64         \n"," 4   time_remaining        2967 non-null   int64         \n"," 5   result                2967 non-null   bool          \n"," 6   shot_type             2967 non-null   int64         \n"," 7   distance_ft           2967 non-null   int64         \n"," 8   lead                  2967 non-null   bool          \n"," 9   lebron_team_score     2967 non-null   int64         \n"," 10  opponent_team_score   2967 non-null   int64         \n"," 11  color                 2967 non-null   object        \n"," 12  Player_Name           2967 non-null   object        \n"," 13  time_remaining_total  2967 non-null   int64         \n"," 14  dif_points            2967 non-null   int64         \n","dtypes: bool(2), datetime64[ns](1), int64(10), object(2)\n","memory usage: 307.3+ KB\n"]},{"output_type":"execute_result","data":{"text/plain":["      top  left       date  qtr  time_remaining  result  shot_type  \\\n","0      63   300 2022-10-18    1             447   False          2   \n","1     133   389 2022-10-18    1             442    True          2   \n","2     326   247 2022-10-18    1             431   False          3   \n","3     249    89 2022-10-18    1             316   False          3   \n","4     282   158 2022-10-18    1             232   False          3   \n","...   ...   ...        ...  ...             ...     ...        ...   \n","2962  118   274 2023-05-22    4             409   False          2   \n","2963  109   221 2023-05-22    4             303   False          2   \n","2964   78   254 2023-05-22    4             200    True          2   \n","2965   78    46 2023-05-22    4              26   False          2   \n","2966   58   192 2023-05-22    4               1   False          2   \n","\n","      distance_ft   lead  lebron_team_score  opponent_team_score  color  \\\n","0               6   True                  9                    6    red   \n","1              17   True                 11                    6  green   \n","2              27   True                 11                    6    red   \n","3              25   True                 19                   13    red   \n","4              24   True                 22                   17    red   \n","...           ...    ...                ...                  ...    ...   \n","2962            8  False                 98                  102    red   \n","2963            6  False                100                  102    red   \n","2964            3  False                104                  107  green   \n","2965           20  False                111                  113    red   \n","2966            5  False                111                  113    red   \n","\n","        Player_Name  time_remaining_total  dif_points  \n","0     Stephen Curry                  2607           3  \n","1     Stephen Curry                  2602           5  \n","2     Stephen Curry                  2591           5  \n","3     Stephen Curry                  2476           6  \n","4     Stephen Curry                  2392           5  \n","...             ...                   ...         ...  \n","2962   LeBron James                   409          -4  \n","2963   LeBron James                   303          -2  \n","2964   LeBron James                   200          -3  \n","2965   LeBron James                    26          -2  \n","2966   LeBron James                     1          -2  \n","\n","[2967 rows x 15 columns]"],"text/html":["\n","  <div id=\"df-1b741752-0d41-4ff4-92ed-9dfbc0c5c0f0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","      <th>left</th>\n","      <th>date</th>\n","      <th>qtr</th>\n","      <th>time_remaining</th>\n","      <th>result</th>\n","      <th>shot_type</th>\n","      <th>distance_ft</th>\n","      <th>lead</th>\n","      <th>lebron_team_score</th>\n","      <th>opponent_team_score</th>\n","      <th>color</th>\n","      <th>Player_Name</th>\n","      <th>time_remaining_total</th>\n","      <th>dif_points</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>63</td>\n","      <td>300</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>447</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","      <td>2607</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>133</td>\n","      <td>389</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>442</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>green</td>\n","      <td>Stephen Curry</td>\n","      <td>2602</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>326</td>\n","      <td>247</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>431</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>27</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","      <td>2591</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>249</td>\n","      <td>89</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>316</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>25</td>\n","      <td>True</td>\n","      <td>19</td>\n","      <td>13</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","      <td>2476</td>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>282</td>\n","      <td>158</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>232</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>24</td>\n","      <td>True</td>\n","      <td>22</td>\n","      <td>17</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","      <td>2392</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>2962</th>\n","      <td>118</td>\n","      <td>274</td>\n","      <td>2023-05-22</td>\n","      <td>4</td>\n","      <td>409</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>8</td>\n","      <td>False</td>\n","      <td>98</td>\n","      <td>102</td>\n","      <td>red</td>\n","      <td>LeBron James</td>\n","      <td>409</td>\n","      <td>-4</td>\n","    </tr>\n","    <tr>\n","      <th>2963</th>\n","      <td>109</td>\n","      <td>221</td>\n","      <td>2023-05-22</td>\n","      <td>4</td>\n","      <td>303</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>False</td>\n","      <td>100</td>\n","      <td>102</td>\n","      <td>red</td>\n","      <td>LeBron James</td>\n","      <td>303</td>\n","      <td>-2</td>\n","    </tr>\n","    <tr>\n","      <th>2964</th>\n","      <td>78</td>\n","      <td>254</td>\n","      <td>2023-05-22</td>\n","      <td>4</td>\n","      <td>200</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>104</td>\n","      <td>107</td>\n","      <td>green</td>\n","      <td>LeBron James</td>\n","      <td>200</td>\n","      <td>-3</td>\n","    </tr>\n","    <tr>\n","      <th>2965</th>\n","      <td>78</td>\n","      <td>46</td>\n","      <td>2023-05-22</td>\n","      <td>4</td>\n","      <td>26</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>20</td>\n","      <td>False</td>\n","      <td>111</td>\n","      <td>113</td>\n","      <td>red</td>\n","      <td>LeBron James</td>\n","      <td>26</td>\n","      <td>-2</td>\n","    </tr>\n","    <tr>\n","      <th>2966</th>\n","      <td>58</td>\n","      <td>192</td>\n","      <td>2023-05-22</td>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>5</td>\n","      <td>False</td>\n","      <td>111</td>\n","      <td>113</td>\n","      <td>red</td>\n","      <td>LeBron James</td>\n","      <td>1</td>\n","      <td>-2</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>2967 rows √ó 15 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1b741752-0d41-4ff4-92ed-9dfbc0c5c0f0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-1b741752-0d41-4ff4-92ed-9dfbc0c5c0f0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-1b741752-0d41-4ff4-92ed-9dfbc0c5c0f0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-ae99cc36-ad2b-4f2b-a53d-3a3b5bf192b7\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ae99cc36-ad2b-4f2b-a53d-3a3b5bf192b7')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-ae99cc36-ad2b-4f2b-a53d-3a3b5bf192b7 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","  <div id=\"id_b92ee6f2-b146-4333-9453-847b4b60ee24\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('final_final_df')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_b92ee6f2-b146-4333-9453-847b4b60ee24 button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('final_final_df');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"final_final_df","summary":"{\n  \"name\": \"final_final_df\",\n  \"rows\": 2967,\n  \"fields\": [\n    {\n      \"column\": \"top\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 101,\n        \"min\": 26,\n        \"max\": 389,\n        \"num_unique_values\": 339,\n        \"samples\": [\n          237,\n          39,\n          68\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 106,\n        \"min\": -3,\n        \"max\": 483,\n        \"num_unique_values\": 457,\n        \"samples\": [\n          447,\n          344,\n          71\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"date\",\n        \"min\": \"2022-10-18 00:00:00\",\n        \"max\": \"2023-05-22 00:00:00\",\n        \"num_unique_values\": 115,\n        \"samples\": [\n          \"2022-12-09 00:00:00\",\n          \"2022-10-27 00:00:00\",\n          \"2023-03-09 00:00:00\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2,\n          0,\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 207,\n        \"min\": 0,\n        \"max\": 713,\n        \"num_unique_values\": 696,\n        \"samples\": [\n          294,\n          172,\n          226\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distance_ft\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 0,\n        \"max\": 36,\n        \"num_unique_values\": 37,\n        \"samples\": [\n          12,\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          false,\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lebron_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35,\n        \"min\": 0,\n        \"max\": 140,\n        \"num_unique_values\": 136,\n        \"samples\": [\n          47,\n          16\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"opponent_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 35,\n        \"min\": 0,\n        \"max\": 135,\n        \"num_unique_values\": 135,\n        \"samples\": [\n          89,\n          78\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"green\",\n          \"red\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Player_Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"LeBron James\",\n          \"Stephen Curry\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining_total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 851,\n        \"min\": 0,\n        \"max\": 3166,\n        \"num_unique_values\": 1818,\n        \"samples\": [\n          1812,\n          1137\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dif_points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 9,\n        \"min\": -27,\n        \"max\": 36,\n        \"num_unique_values\": 62,\n        \"samples\": [\n          32,\n          27\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":55}]},{"cell_type":"code","source":["#final_final_df.to_csv('player_shots_final.csv')\n","#!cp player_shots_final.csv \"gdrive/MyDrive/\""],"metadata":{"id":"8OlTkQjviyhW"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"4rvTpUgY9ixE"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["## Analisis\n"],"metadata":{"id":"vSVH1hiXNGHM"}},{"cell_type":"markdown","source":["### Primero cargamos el dataset preprocesado"],"metadata":{"id":"ieW25G_Mb7vh"}},{"cell_type":"code","source":["from google.colab import drive\n","drive.mount('/content/gdrive')\n","df = pd.read_csv('/content/gdrive/MyDrive/player_shots_final.csv')"],"metadata":{"id":"CQGUq2WqIcjt","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1728292849211,"user_tz":-120,"elapsed":1802,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"ccd13827-5488-430b-a1bd-e928ab75d97a"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Drive already mounted at /content/gdrive; to attempt to forcibly remount, call drive.mount(\"/content/gdrive\", force_remount=True).\n"]}]},{"cell_type":"markdown","source":["### Obtenemos informaci√≥n sobre el dataset"],"metadata":{"id":"ZiQbeOy6cKo4"}},{"cell_type":"code","source":["print(df.shape)                       ##Obtenemos la forma de nuestro dataset\n","display(df.head(3))                   ##Visualizamos las 3 primeras filas para ver la estructura\n","display(df.describe())                ##Pedimos que se nos describan datos sobre cada columna\n","display(df.isnull().sum().sum())      ##Checkeamos que no haya valores nulos en nuestro dataset"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":461},"id":"O_Tk9N7jcFZw","executionInfo":{"status":"ok","timestamp":1728292851257,"user_tz":-120,"elapsed":272,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"a6a1b92e-8103-4eaf-dfdb-0ba9830e3fd5"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2967, 16)\n"]},{"output_type":"display_data","data":{"text/plain":["   Unnamed: 0  top  left        date  qtr  time_remaining  result  shot_type  \\\n","0           0   63   300  2022-10-18    1             447   False          2   \n","1           1  133   389  2022-10-18    1             442    True          2   \n","2           2  326   247  2022-10-18    1             431   False          3   \n","\n","   distance_ft  lead  lebron_team_score  opponent_team_score  color  \\\n","0            6  True                  9                    6    red   \n","1           17  True                 11                    6  green   \n","2           27  True                 11                    6    red   \n","\n","     Player_Name  time_remaining_total  dif_points  \n","0  Stephen Curry                  2607           3  \n","1  Stephen Curry                  2602           5  \n","2  Stephen Curry                  2591           5  "],"text/html":["\n","  <div id=\"df-30cb3aeb-d143-4aea-b39f-35f5a5fd70bd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>top</th>\n","      <th>left</th>\n","      <th>date</th>\n","      <th>qtr</th>\n","      <th>time_remaining</th>\n","      <th>result</th>\n","      <th>shot_type</th>\n","      <th>distance_ft</th>\n","      <th>lead</th>\n","      <th>lebron_team_score</th>\n","      <th>opponent_team_score</th>\n","      <th>color</th>\n","      <th>Player_Name</th>\n","      <th>time_remaining_total</th>\n","      <th>dif_points</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>63</td>\n","      <td>300</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>447</td>\n","      <td>False</td>\n","      <td>2</td>\n","      <td>6</td>\n","      <td>True</td>\n","      <td>9</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","      <td>2607</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>133</td>\n","      <td>389</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>442</td>\n","      <td>True</td>\n","      <td>2</td>\n","      <td>17</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>green</td>\n","      <td>Stephen Curry</td>\n","      <td>2602</td>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>326</td>\n","      <td>247</td>\n","      <td>2022-10-18</td>\n","      <td>1</td>\n","      <td>431</td>\n","      <td>False</td>\n","      <td>3</td>\n","      <td>27</td>\n","      <td>True</td>\n","      <td>11</td>\n","      <td>6</td>\n","      <td>red</td>\n","      <td>Stephen Curry</td>\n","      <td>2591</td>\n","      <td>5</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-30cb3aeb-d143-4aea-b39f-35f5a5fd70bd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-30cb3aeb-d143-4aea-b39f-35f5a5fd70bd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-30cb3aeb-d143-4aea-b39f-35f5a5fd70bd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-55b939a4-4ec2-4fc4-8604-b9455eb9204c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-55b939a4-4ec2-4fc4-8604-b9455eb9204c')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-55b939a4-4ec2-4fc4-8604-b9455eb9204c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 3,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 2,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          0,\n          1,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"top\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 136,\n        \"min\": 63,\n        \"max\": 326,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          63,\n          133,\n          326\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 71,\n        \"min\": 247,\n        \"max\": 389,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          300,\n          389,\n          247\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"2022-10-18\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 1,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          1\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 431,\n        \"max\": 447,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          447\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distance_ft\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 10,\n        \"min\": 6,\n        \"max\": 27,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          true\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lebron_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 9,\n        \"max\": 11,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          11\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"opponent_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 6,\n        \"max\": 6,\n        \"num_unique_values\": 1,\n        \"samples\": [\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"color\",\n      \"properties\": {\n        \"dtype\": \"string\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          \"green\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Player_Name\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Stephen Curry\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining_total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 8,\n        \"min\": 2591,\n        \"max\": 2607,\n        \"num_unique_values\": 3,\n        \"samples\": [\n          2607\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dif_points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 3,\n        \"max\": 5,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       Unnamed: 0          top         left          qtr  time_remaining  \\\n","count  2967.00000  2967.000000  2967.000000  2967.000000     2967.000000   \n","mean   1483.00000   170.954499   238.989552     2.533873      358.880013   \n","std     856.64345   101.972579   106.550721     1.139665      207.529999   \n","min       0.00000    26.000000    -3.000000     0.000000        0.000000   \n","25%     741.50000    72.000000   187.000000     2.000000      177.500000   \n","50%    1483.00000   147.000000   240.000000     3.000000      370.000000   \n","75%    2224.50000   273.000000   291.000000     4.000000      536.000000   \n","max    2966.00000   389.000000   483.000000     4.000000      713.000000   \n","\n","         shot_type  distance_ft  lebron_team_score  opponent_team_score  \\\n","count  2967.000000  2967.000000        2967.000000          2967.000000   \n","mean      2.429727    15.595214          61.600270            60.619818   \n","std       0.495121    10.884684          35.087473            35.257224   \n","min       2.000000     0.000000           0.000000             0.000000   \n","25%       2.000000     4.000000          33.000000            32.000000   \n","50%       2.000000    18.000000          62.000000            61.000000   \n","75%       3.000000    26.000000          90.000000            90.000000   \n","max       3.000000    36.000000         140.000000           135.000000   \n","\n","       time_remaining_total   dif_points  \n","count           2967.000000  2967.000000  \n","mean            1414.491743     0.980452  \n","std              851.538417     9.347507  \n","min                0.000000   -27.000000  \n","25%              663.000000    -5.000000  \n","50%             1381.000000     1.000000  \n","75%             2102.000000     7.000000  \n","max             3166.000000    36.000000  "],"text/html":["\n","  <div id=\"df-dc52e112-e8e7-40d8-9b2b-99eed4953b37\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Unnamed: 0</th>\n","      <th>top</th>\n","      <th>left</th>\n","      <th>qtr</th>\n","      <th>time_remaining</th>\n","      <th>shot_type</th>\n","      <th>distance_ft</th>\n","      <th>lebron_team_score</th>\n","      <th>opponent_team_score</th>\n","      <th>time_remaining_total</th>\n","      <th>dif_points</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>2967.00000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","      <td>2967.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1483.00000</td>\n","      <td>170.954499</td>\n","      <td>238.989552</td>\n","      <td>2.533873</td>\n","      <td>358.880013</td>\n","      <td>2.429727</td>\n","      <td>15.595214</td>\n","      <td>61.600270</td>\n","      <td>60.619818</td>\n","      <td>1414.491743</td>\n","      <td>0.980452</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>856.64345</td>\n","      <td>101.972579</td>\n","      <td>106.550721</td>\n","      <td>1.139665</td>\n","      <td>207.529999</td>\n","      <td>0.495121</td>\n","      <td>10.884684</td>\n","      <td>35.087473</td>\n","      <td>35.257224</td>\n","      <td>851.538417</td>\n","      <td>9.347507</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>0.00000</td>\n","      <td>26.000000</td>\n","      <td>-3.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>-27.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>741.50000</td>\n","      <td>72.000000</td>\n","      <td>187.000000</td>\n","      <td>2.000000</td>\n","      <td>177.500000</td>\n","      <td>2.000000</td>\n","      <td>4.000000</td>\n","      <td>33.000000</td>\n","      <td>32.000000</td>\n","      <td>663.000000</td>\n","      <td>-5.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1483.00000</td>\n","      <td>147.000000</td>\n","      <td>240.000000</td>\n","      <td>3.000000</td>\n","      <td>370.000000</td>\n","      <td>2.000000</td>\n","      <td>18.000000</td>\n","      <td>62.000000</td>\n","      <td>61.000000</td>\n","      <td>1381.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2224.50000</td>\n","      <td>273.000000</td>\n","      <td>291.000000</td>\n","      <td>4.000000</td>\n","      <td>536.000000</td>\n","      <td>3.000000</td>\n","      <td>26.000000</td>\n","      <td>90.000000</td>\n","      <td>90.000000</td>\n","      <td>2102.000000</td>\n","      <td>7.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2966.00000</td>\n","      <td>389.000000</td>\n","      <td>483.000000</td>\n","      <td>4.000000</td>\n","      <td>713.000000</td>\n","      <td>3.000000</td>\n","      <td>36.000000</td>\n","      <td>140.000000</td>\n","      <td>135.000000</td>\n","      <td>3166.000000</td>\n","      <td>36.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dc52e112-e8e7-40d8-9b2b-99eed4953b37')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-dc52e112-e8e7-40d8-9b2b-99eed4953b37 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-dc52e112-e8e7-40d8-9b2b-99eed4953b37');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-6fedcb0e-1ad9-4aa7-8321-198e8cd77c13\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-6fedcb0e-1ad9-4aa7-8321-198e8cd77c13')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-6fedcb0e-1ad9-4aa7-8321-198e8cd77c13 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"display(df\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Unnamed: 0\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1069.1022263147668,\n        \"min\": 0.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2967.0,\n          1483.0,\n          2224.5\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"top\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 996.1645248044009,\n        \"min\": 26.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          170.95449949443883,\n          147.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"left\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 981.1789095466196,\n        \"min\": -3.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          238.98955173576002,\n          240.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1048.151655280632,\n        \"min\": 0.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          2967.0,\n          2.533872598584429,\n          3.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 955.2883799581136,\n        \"min\": 0.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          358.8800134816313,\n          370.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1048.2393861128837,\n        \"min\": 0.4951205193494943,\n        \"max\": 2967.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          2.429726996966633,\n          3.0,\n          0.4951205193494943\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"distance_ft\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1043.4764951548627,\n        \"min\": 0.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          15.59521402089653,\n          18.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"lebron_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1028.5459324797184,\n        \"min\": 0.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          61.60026963262555,\n          62.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"opponent_team_score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1028.8888345685964,\n        \"min\": 0.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          60.619817997977755,\n          61.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"time_remaining_total\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1111.3351591977946,\n        \"min\": 0.0,\n        \"max\": 3166.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          1414.4917425008425,\n          1381.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"dif_points\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1048.0094827702883,\n        \"min\": -27.0,\n        \"max\": 2967.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          0.9804516346477924,\n          1.0,\n          2967.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["0"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Comienza el analisis"],"metadata":{"id":"vlQx7KjVdIAw"}},{"cell_type":"code","source":["grouped = df.groupby(df.Player_Name)\n","df_Lebron = grouped.get_group(\"LeBron James\")   ##Podemos dividir el dataset as√≠, segun la pesta√±a PlayerName\n","df_Curry = grouped.get_group(\"Stephen Curry\")   ##Podemos dividir el dataset as√≠, segun la pesta√±a PlayerName\n","\n","dfs = {}\n","dfs[\"df1\"] = df_Lebron\n","dfs[\"df2\"] = df_Curry"],"metadata":{"id":"EiDsgcrsdUQg"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["### Primer analisis, posicion media vertical de los jugadores al tirar a canasta."],"metadata":{"id":"wOLEvWzveU7I"}},{"cell_type":"code","source":["plt.figure(figsize=(15,4))\n","for i in range(1,3):\n","    n = int(i)+130\n","    plt.subplot(n)\n","    sns.histplot(dfs[f\"df{i}\"][\"top\"])"],"metadata":{"id":"mjgc_NuUcRmZ","colab":{"base_uri":"https://localhost:8080/","height":388},"executionInfo":{"status":"ok","timestamp":1728287478388,"user_tz":-120,"elapsed":865,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"4e534ff5-8e39-4532-89e4-3db0f260e6bb"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"iVBORw0KGgoAAAANSUhEUgAAA0MAAAFzCAYAAAD8JdJrAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjcuMSwgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/bCgiHAAAACXBIWXMAAA9hAAAPYQGoP6dpAABFTElEQVR4nO3dfXQUdZ7v8U9CHiBAJ4aYdLIkgMIQwqMDTuh1xkWIhMB1VPLHMKJEZWFlE1bILMPEQR514nW8AroxXGcR8EiGXeeII6yCPEhch8BAxshzVliYRkknE9ikIYROQur+4aXGlvAUutPd6ffrnDonVfXr+n2rAvmeb1X17xdiGIYhAAAAAAgyob4OAAAAAAB8gWIIAAAAQFCiGAIAAAAQlCiGAAAAAAQliiEAAAAAQYliCAAAAEBQohgCAAAAEJQohgAAAAAEpTBfB+APWltbdebMGfXs2VMhISG+DgcAAp5hGDp//rySkpIUGsp9N/IMAHiWp/IMxZCkM2fOKDk52ddhAECnc/r0afXu3dvXYfgceQYAvON28wzFkKSePXtK+uZiWiwWH0cDAIHP6XQqOTnZ/Psa7MgzAOBZnsozFEOS+cqCxWIhSQGAB/n6lbDi4mIVFxfr1KlTkqTBgwdr4cKFysrKkiSNGTNGpaWlbp/5h3/4B61atcpct9vtmjVrlj755BP16NFDOTk5KiwsVFjYzadQ8gwAeMft5hmKIQBAp9W7d2+99NJLGjBggAzD0Lp16/Twww/r888/1+DBgyVJM2bM0NKlS83PREVFmT9fvnxZkyZNktVq1e7du1VVVaVp06YpPDxcv/rVrzr8fAAAnkUxBADotB566CG39RdffFHFxcXas2ePWQxFRUXJarW2+fmPP/5YR44c0fbt25WQkKARI0Zo2bJlmj9/vhYvXqyIiAivnwMAwHsY4gcAEBQuX76sDRs2qKGhQTabzdy+fv16xcXFaciQISooKNDFixfNfWVlZRo6dKgSEhLMbZmZmXI6nTp8+HCHxg8A8DyeDAEAOrWDBw/KZrPp0qVL6tGjhzZu3Ki0tDRJ0mOPPaY+ffooKSlJBw4c0Pz581VZWan33ntPkuRwONwKIUnmusPhuGafLpdLLpfLXHc6nZ4+LQCAB1AMAQA6tYEDB6qiokL19fX63e9+p5ycHJWWliotLU0zZ8402w0dOlSJiYkaN26cTpw4obvvvrvdfRYWFmrJkiWeCB8A4EW8JgcA6NQiIiLUv39/jRw5UoWFhRo+fLhWrlzZZtv09HRJ0vHjxyVJVqtV1dXVbm2urF/re0aSVFBQoPr6enM5ffq0J04FAOBhFEMAgKDS2trq9grbt1VUVEiSEhMTJUk2m00HDx5UTU2N2Wbbtm2yWCzmq3ZtiYyMNIfRZjhtAPBfvCYHAOi0CgoKlJWVpZSUFJ0/f14lJSXatWuXtm7dqhMnTqikpEQTJ05Ur169dODAAc2dO1f333+/hg0bJkkaP3680tLS9MQTT+jll1+Ww+HQggULlJubq8jISB+fHQDgdlEMAQA6rZqaGk2bNk1VVVWKjo7WsGHDtHXrVj344IM6ffq0tm/frhUrVqihoUHJycnKzs7WggULzM936dJFmzdv1qxZs2Sz2dS9e3fl5OS4zUsEAAhcIYZhGL4OwtecTqeio6NVX1/PqwwA4AH8XXXH9QAAz/LU31WeDAUQu92u2tpar/cTFxenlJQUr/cDAPAv5BkAwYZiKEDY7Xalpg5SY+PFGze+Td26RenYsaMkKgAIIuQZAMGIYihA1NbWqrHxotKfXiRLYl+v9eOsOqW9by1RbW0tSQoAggh5BkAwohgKMJbEvopNGejrMAAAnRR5BkAwYZ4hAAAAAEGJYggAAABAUPKbYuill15SSEiI5syZY267dOmScnNz1atXL/Xo0UPZ2dmqrq52+5zdbtekSZMUFRWl+Ph4zZs3Ty0tLR0cPQAAAIBA4xfF0L59+/R//+//NWf8vmLu3LnatGmT3n33XZWWlurMmTOaPHmyuf/y5cuaNGmSmpqatHv3bq1bt05r167VwoULO/oUAAAAAAQYnxdDFy5c0NSpU/Wb3/xGd9xxh7m9vr5eq1ev1quvvqqxY8dq5MiRWrNmjXbv3q09e/ZIkj7++GMdOXJE77zzjkaMGKGsrCwtW7ZMRUVFampq8tUpAQAAAAgAPi+GcnNzNWnSJGVkZLhtLy8vV3Nzs9v21NRUpaSkqKysTJJUVlamoUOHKiEhwWyTmZkpp9Opw4cPd8wJAAAAAAhIPh1ae8OGDfrTn/6kffv2XbXP4XAoIiJCMTExbtsTEhLkcDjMNt8uhK7sv7LvWlwul1wul7nudDrbewoAAAAAApTPngydPn1azz77rNavX6+uXbt2aN+FhYWKjo42l+Tk5A7tHwAAAIDv+awYKi8vV01Njb7//e8rLCxMYWFhKi0t1WuvvaawsDAlJCSoqalJdXV1bp+rrq6W1WqVJFmt1qtGl7uyfqVNWwoKClRfX28up0+f9uzJAQAAAPB7PiuGxo0bp4MHD6qiosJcRo0apalTp5o/h4eHa8eOHeZnKisrZbfbZbPZJEk2m00HDx5UTU2N2Wbbtm2yWCxKS0u7Zt+RkZGyWCxuCwAAAIDg4rPvDPXs2VNDhgxx29a9e3f16tXL3D59+nTl5+crNjZWFotFs2fPls1m0+jRoyVJ48ePV1pamp544gm9/PLLcjgcWrBggXJzcxUZGdnh5wQAAAAgcPh0AIUbWb58uUJDQ5WdnS2Xy6XMzEy98cYb5v4uXbpo8+bNmjVrlmw2m7p3766cnBwtXbrUh1EDAAAACAR+VQzt2rXLbb1r164qKipSUVHRNT/Tp08fffjhh16ODAAAAEBn4/N5hgAAAADAFyiGAAAAAAQliiEAAAAAQYliCAAAAEBQohgCAAAAEJQohgAAAAAEJYohAAAAAEGJYggAAABAUKIYAgAAABCUKIYAAAAABCWKIQAAAABBiWIIAAAAQFCiGAIAAAAQlCiGAAAAAAQliiEAAAAAQYliCADQaRUXF2vYsGGyWCyyWCyy2Wz66KOPzP2XLl1Sbm6uevXqpR49eig7O1vV1dVux7Db7Zo0aZKioqIUHx+vefPmqaWlpaNPBQDgBRRDAIBOq3fv3nrppZdUXl6u/fv3a+zYsXr44Yd1+PBhSdLcuXO1adMmvfvuuyotLdWZM2c0efJk8/OXL1/WpEmT1NTUpN27d2vdunVau3atFi5c6KtTAgB4UJivAwAAwFseeught/UXX3xRxcXF2rNnj3r37q3Vq1erpKREY8eOlSStWbNGgwYN0p49ezR69Gh9/PHHOnLkiLZv366EhASNGDFCy5Yt0/z587V48WJFRET44rQAAB7CkyEAQFC4fPmyNmzYoIaGBtlsNpWXl6u5uVkZGRlmm9TUVKWkpKisrEySVFZWpqFDhyohIcFsk5mZKafTaT5dAgAELp4MAQA6tYMHD8pms+nSpUvq0aOHNm7cqLS0NFVUVCgiIkIxMTFu7RMSEuRwOCRJDofDrRC6sv/KvmtxuVxyuVzmutPp9NDZAAA8iSdDAIBObeDAgaqoqNDevXs1a9Ys5eTk6MiRI17ts7CwUNHR0eaSnJzs1f4AAO1DMQQA6NQiIiLUv39/jRw5UoWFhRo+fLhWrlwpq9WqpqYm1dXVubWvrq6W1WqVJFmt1qtGl7uyfqVNWwoKClRfX28up0+f9uxJAQA8gmIIABBUWltb5XK5NHLkSIWHh2vHjh3mvsrKStntdtlsNkmSzWbTwYMHVVNTY7bZtm2bLBaL0tLSrtlHZGSkOZz3lQUA4H/4zhAAoNMqKChQVlaWUlJSdP78eZWUlGjXrl3aunWroqOjNX36dOXn5ys2NlYWi0WzZ8+WzWbT6NGjJUnjx49XWlqannjiCb388styOBxasGCBcnNzFRkZ6eOzAwDcLoohAECnVVNTo2nTpqmqqkrR0dEaNmyYtm7dqgcffFCStHz5coWGhio7O1sul0uZmZl64403zM936dJFmzdv1qxZs2Sz2dS9e3fl5ORo6dKlvjolAIAH+fQ1uRvNDD5mzBiFhIS4Lc8884zbMZgZHABwLatXr9apU6fkcrlUU1Oj7du3m4WQJHXt2lVFRUU6d+6cGhoa9N577131XaA+ffroww8/1MWLF/WXv/xFr7zyisLCuJcIAJ2BT/+aX5kZfMCAATIMQ+vWrdPDDz+szz//XIMHD5YkzZgxw+0OXFRUlPnzlZnBrVardu/eraqqKk2bNk3h4eH61a9+1eHnAwAAACBw+LQYut7M4FeKoaioqGuO2MPM4AAAAADay29Gk/vuzOBXrF+/XnFxcRoyZIgKCgp08eJFc197ZwZ3uVxyOp1uCwAAAIDg4vOXnq81M7gkPfbYY+rTp4+SkpJ04MABzZ8/X5WVlXrvvfcktX9m8MLCQi1ZssRLZwQAAAAgEPi8GLoyM3h9fb1+97vfKScnR6WlpUpLS9PMmTPNdkOHDlViYqLGjRunEydO6O677253nwUFBcrPzzfXnU4ns4MDAAAAQcbnr8lda2bwtqSnp0uSjh8/Lqn9M4MzGR4AAAAAnxdD33VlZvC2VFRUSJISExMltX9mcAAAAADw6Wty15sZ/MSJEyopKdHEiRPVq1cvHThwQHPnztX999+vYcOGSWJmcAAAAADt59Ni6Hozg58+fVrbt2/XihUr1NDQoOTkZGVnZ2vBggXm55kZHAAAAEB7+bQYWr169TX3JScnq7S09IbHuDIzOAAAAADcCr/7zhAAAAAAdASKIQAAAABByefzDHUGdrtdtbW1Xu3j6NGjXj0+AAAAEGwohm6T3W5XauogNTZe7JD+ml1NHdIPAAAA0NlRDN2m2tpaNTZeVPrTi2RJ7Ou1fqoOlunQB2+qpaXFa30AAAAAwYRiyEMsiX0VmzLQa8d3Vp3y2rEBAACAYMQACgAAAACCEsUQAAAAgKBEMQQAAAAgKFEMAQAAAAhKFEMAAAAAghLFEAAAAICgRDEEAAAAIChRDAEAAAAIShRDAAAAAIISxRAAAACAoEQxBAAAACAoUQwBAAAACEoUQwAAAACCEsUQAAAAgKBEMQQAAAAgKFEMAQAAAAhKFEMAgE6rsLBQ9957r3r27Kn4+Hg98sgjqqysdGszZswYhYSEuC3PPPOMWxu73a5JkyYpKipK8fHxmjdvnlpaWjryVAAAXhDm6wAAAPCW0tJS5ebm6t5771VLS4uee+45jR8/XkeOHFH37t3NdjNmzNDSpUvN9aioKPPny5cva9KkSbJardq9e7eqqqo0bdo0hYeH61e/+lWHng8AwLN8+mSouLhYw4YNk8VikcVikc1m00cffWTuv3TpknJzc9WrVy/16NFD2dnZqq6udjsGd+sAANeyZcsWPfnkkxo8eLCGDx+utWvXym63q7y83K1dVFSUrFaruVgsFnPfxx9/rCNHjuidd97RiBEjlJWVpWXLlqmoqEhNTU0dfUoAAA/yaTHUu3dvvfTSSyovL9f+/fs1duxYPfzwwzp8+LAkae7cudq0aZPeffddlZaW6syZM5o8ebL5+St365qamrR7926tW7dOa9eu1cKFC311SgAAP1ZfXy9Jio2Nddu+fv16xcXFaciQISooKNDFixfNfWVlZRo6dKgSEhLMbZmZmXI6nWa+AgAEJp++JvfQQw+5rb/44osqLi7Wnj171Lt3b61evVolJSUaO3asJGnNmjUaNGiQ9uzZo9GjR5t367Zv366EhASNGDFCy5Yt0/z587V48WJFRET44rQAAH6otbVVc+bM0X333achQ4aY2x977DH16dNHSUlJOnDggObPn6/Kykq99957kiSHw+FWCEky1x0OR5t9uVwuuVwuc93pdHr6dAAAHuA3AyhcvnxZGzZsUENDg2w2m8rLy9Xc3KyMjAyzTWpqqlJSUlRWViaJu3UAgJuXm5urQ4cOacOGDW7bZ86cqczMTA0dOlRTp07V22+/rY0bN+rEiRPt7quwsFDR0dHmkpycfLvhAwC8wOfF0MGDB9WjRw9FRkbqmWee0caNG5WWliaHw6GIiAjFxMS4tU9ISDDvxLXnbp30zR07p9PptgAAOq+8vDxt3rxZn3zyiXr37n3dtunp6ZKk48ePS5KsVutV31e9sm61Wts8RkFBgerr683l9OnTt3sKAAAv8HkxNHDgQFVUVGjv3r2aNWuWcnJydOTIEa/2yR07AAgOhmEoLy9PGzdu1M6dO9WvX78bfqaiokKSlJiYKEmy2Ww6ePCgampqzDbbtm2TxWJRWlpam8eIjIw0Bwe6sgAA/I/Pi6GIiAj1799fI0eOVGFhoYYPH66VK1fKarWqqalJdXV1bu2rq6vNO3HtuVsncccOAIJFbm6u3nnnHZWUlKhnz55yOBxyOBxqbGyUJJ04cULLli1TeXm5Tp06pQ8++EDTpk3T/fffr2HDhkmSxo8fr7S0ND3xxBP64osvtHXrVi1YsEC5ubmKjIz05ekBAG6Tz4uh72ptbZXL5dLIkSMVHh6uHTt2mPsqKytlt9tls9kkte9uncQdOwAIFsXFxaqvr9eYMWOUmJhoLv/2b/8m6Zsbctu3b9f48eOVmpqqn/3sZ8rOztamTZvMY3Tp0kWbN29Wly5dZLPZ9Pjjj2vatGlu8xIBAAKTT0eTKygoUFZWllJSUnT+/HmVlJRo165d2rp1q6KjozV9+nTl5+crNjZWFotFs2fPls1m0+jRoyW53617+eWX5XA4uFsHADAZhnHd/cnJySotLb3hcfr06aMPP/zQU2EBAPyET4uhmpoaTZs2TVVVVYqOjtawYcO0detWPfjgg5Kk5cuXKzQ0VNnZ2XK5XMrMzNQbb7xhfv7K3bpZs2bJZrOpe/fuysnJ4W4dAAAAgBvyaTG0evXq6+7v2rWrioqKVFRUdM023K0DAAAA0B5+950hAAAAAOgIFEMAAAAAghLFEAAAAICgRDEEAAAAIChRDAEAAAAIShRDAAAAAIISxRAAAACAoEQxBAAAACAoUQwBAAAACEoUQwAAAACCEsUQAAAAgKBEMQQAAAAgKFEMAQAAAAhKFEMAAAAAghLFEAAAAICgRDEEAAAAIChRDAEAAAAIShRDAAAAAIISxRAAAACAoBTm6wAAAACAQGe321VbW+v1fuLi4pSSkuL1foIFxRAAAABwG+x2u1JTB6mx8aLX++rWLUrHjh2lIPIQiiEAAADgNtTW1qqx8aLSn14kS2Jfr/XjrDqlvW8tUW1tLcWQh1AMAQAAAB5gSeyr2JSBvg4Dt4ABFAAAAAAEJYohAAAAAEHJp8VQYWGh7r33XvXs2VPx8fF65JFHVFlZ6dZmzJgxCgkJcVueeeYZtzZ2u12TJk1SVFSU4uPjNW/ePLW0tHTkqQAAAAAIMD79zlBpaalyc3N17733qqWlRc8995zGjx+vI0eOqHv37ma7GTNmaOnSpeZ6VFSU+fPly5c1adIkWa1W7d69W1VVVZo2bZrCw8P1q1/9qkPPBwAAAEDg8GkxtGXLFrf1tWvXKj4+XuXl5br//vvN7VFRUbJarW0e4+OPP9aRI0e0fft2JSQkaMSIEVq2bJnmz5+vxYsXKyIiwqvnAAAAACAw+dV3hurr6yVJsbGxbtvXr1+vuLg4DRkyRAUFBbp48a9juJeVlWno0KFKSEgwt2VmZsrpdOrw4cNt9uNyueR0Ot0WAAAAAMHFb4bWbm1t1Zw5c3TfffdpyJAh5vbHHntMffr0UVJSkg4cOKD58+ersrJS7733niTJ4XC4FUKSzHWHw9FmX4WFhVqyZImXzgQAAABAIPCbJ0O5ubk6dOiQNmzY4LZ95syZyszM1NChQzV16lS9/fbb2rhxo06cONHuvgoKClRfX28up0+fvt3wAQB+6GYG6rl06ZJyc3PVq1cv9ejRQ9nZ2aqurnZrw0A9ANA5+UUxlJeXp82bN+uTTz5R7969r9s2PT1dknT8+HFJktVqvSppXVm/1veMIiMjZbFY3BYAQOdzZaCePXv2aNu2bWpubtb48ePV0NBgtpk7d642bdqkd999V6WlpTpz5owmT55s7r8yUE9TU5N2796tdevWae3atVq4cKEvTgkA4EE+fU3OMAzNnj1bGzdu1K5du9SvX78bfqaiokKSlJiYKEmy2Wx68cUXVVNTo/j4eEnStm3bZLFYlJaW5rXYAQD+70YD9dTX12v16tUqKSnR2LFjJUlr1qzRoEGDtGfPHo0ePZqBegCgE/Ppk6Hc3Fy98847KikpUc+ePeVwOORwONTY2ChJOnHihJYtW6by8nKdOnVKH3zwgaZNm6b7779fw4YNkySNHz9eaWlpeuKJJ/TFF19o69atWrBggXJzcxUZGenL0wMA+JnvDtRTXl6u5uZmZWRkmG1SU1OVkpKisrIySe0bqAcAEBh8+mSouLhY0jcTq37bmjVr9OSTTyoiIkLbt2/XihUr1NDQoOTkZGVnZ2vBggVm2y5dumjz5s2aNWuWbDabunfvrpycHLd5iQAAaGugHofDoYiICMXExLi1TUhIMAfhac9APS6XSy6Xy1xn1FIA8E/tKobuuusu7du3T7169XLbXldXp+9///v67//+75s6jmEY192fnJys0tLSGx6nT58++vDDD2+qTwCA//NUnvm2KwP1fPbZZ54K85oYtRQAAkO7XpM7deqULl++fNV2l8ulr7/++raDAgAEN0/nmWsN1GO1WtXU1KS6ujq39tXV1eYgPO0ZqIdRSwEgMNzSk6EPPvjA/Hnr1q2Kjo421y9fvqwdO3aob9++HgsOABBcPJ1nbjRQz8iRIxUeHq4dO3YoOztbklRZWSm73S6bzSapfQP1REZG8r1VAAgAt1QMPfLII5KkkJAQ5eTkuO0LDw9X37599X/+z//xWHAAgODi6TyTm5urkpIS/f73vzcH6pGk6OhodevWTdHR0Zo+fbry8/MVGxsri8Wi2bNny2azafTo0ZLcB+p5+eWX5XA4GKgHADqJWyqGWltbJUn9+vXTvn37FBcX55WgAADBydN55kYD9UjS8uXLFRoaquzsbLlcLmVmZuqNN94w2zJQDwB0Xu0aQOHkyZOejgMAAJOn8syNBuqRpK5du6qoqEhFRUXXbMNAPQDQObV7aO0dO3Zox44dqqmpMe/kXfHWW2/ddmAAgOBGngEAeFu7iqElS5Zo6dKlGjVqlBITExUSEuLpuAAAQYw8AwDoCO0qhlatWqW1a9fqiSee8HQ8AACQZwAAHaJd8ww1NTXpb//2bz0dCwAAksgzAICO0a5i6O///u9VUlLi6VgAAJBEngEAdIx2vSZ36dIlvfnmm9q+fbuGDRum8PBwt/2vvvqqR4IDAAQn8gwAoCO0qxg6cOCARowYIUk6dOiQ2z6+5AoAuF3kGQBAR2hXMfTJJ594Og4AAEzkGQBAR2jXd4YAAAAAINC168nQAw88cN3XFHbu3NnugAAAIM8AADpCu4qhK+9xX9Hc3KyKigodOnRIOTk5nogLABDEyDMAgI7QrmJo+fLlbW5fvHixLly4cFsBAQBAngEAdASPfmfo8ccf11tvveXJQwIAYCLPAAA8yaPFUFlZmbp27erJQwIAYCLPAAA8qV2vyU2ePNlt3TAMVVVVaf/+/Xr++ec9EhgAIHiRZwAAHaFdxVB0dLTbemhoqAYOHKilS5dq/PjxHgkMABC8yDMAgI7QrmJozZo1no4DAAATeQYA0BHaVQxdUV5erqNHj0qSBg8erHvuuccjQQEAIJFnAADe1a5iqKamRlOmTNGuXbsUExMjSaqrq9MDDzygDRs26M477/RkjACAIEOeAQB0hHaNJjd79mydP39ehw8f1rlz53Tu3DkdOnRITqdT//RP/3TTxyksLNS9996rnj17Kj4+Xo888ogqKyvd2ly6dEm5ubnq1auXevTooezsbFVXV7u1sdvtmjRpkqKiohQfH6958+appaWlPacGAPADnsozAABcT7uKoS1btuiNN97QoEGDzG1paWkqKirSRx99dNPHKS0tVW5urvbs2aNt27apublZ48ePV0NDg9lm7ty52rRpk959912VlpbqzJkzbqMMXb58WZMmTVJTU5N2796tdevWae3atVq4cGF7Tg0A4Ac8lWcAALiedr0m19raqvDw8Ku2h4eHq7W19aaPs2XLFrf1tWvXKj4+XuXl5br//vtVX1+v1atXq6SkRGPHjpX0zZdqBw0apD179mj06NH6+OOPdeTIEW3fvl0JCQkaMWKEli1bpvnz52vx4sWKiIhozykCAHzIU3kGAIDradeTobFjx+rZZ5/VmTNnzG1ff/215s6dq3HjxrU7mPr6eklSbGyspG++ONvc3KyMjAyzTWpqqlJSUlRWVibpmwn4hg4dqoSEBLNNZmamnE6nDh8+3O5YAAC+4608AwDAt7XrydC//Mu/6Mc//rH69u2r5ORkSdLp06c1ZMgQvfPOO+0KpLW1VXPmzNF9992nIUOGSJIcDociIiLML89ekZCQIIfDYbb5diF0Zf+VfW1xuVxyuVzmutPpbFfMAADv8EaeARCc7Ha7amtrvdrHlVEvEXjaVQwlJyfrT3/6k7Zv365jx45JkgYNGuT2BOdW5ebm6tChQ/rss8/afYybVVhYqCVLlni9HwBA+3gjzwAIPna7Xampg9TYeLFD+mt2NXVIP/CcWyqGdu7cqby8PO3Zs0cWi0UPPvigHnzwQUnfvOI2ePBgrVq1Sj/60Y9uKYi8vDxt3rxZn376qXr37m1ut1qtampqUl1dndvToerqalmtVrPNH//4R7fjXRlt7kqb7yooKFB+fr657nQ6zTuPAADf8VaeARCcamtr1dh4UelPL5Ilsa/X+qk6WKZDH7zJaMYB6JaKoRUrVmjGjBmyWCxX7YuOjtY//MM/6NVXX73pJGUYhmbPnq2NGzdq165d6tevn9v+kSNHKjw8XDt27FB2drYkqbKyUna7XTabTZJks9n04osvqqamRvHx8ZKkbdu2yWKxKC0trc1+IyMjFRkZedPnDQDoGJ7OMwAgSZbEvopNGei14zurTnnt2PCuWxpA4YsvvtCECROuuX/8+PEqLy+/6ePl5ubqnXfeUUlJiXr27CmHwyGHw6HGxkZJ3yS+6dOnKz8/X5988onKy8v11FNPyWazafTo0WafaWlpeuKJJ/TFF19o69atWrBggXJzcyl4ACDAeDrPAABwPbf0ZKi6urrNoU7Ng4WF6S9/+ctNH6+4uFiSNGbMGLfta9as0ZNPPilJWr58uUJDQ5WdnS2Xy6XMzEy98cYbZtsuXbpo8+bNmjVrlmw2m7p3766cnBwtXbr05k8MAOAXPJ1nAAC4nlsqhv7mb/5Ghw4dUv/+/dvcf+DAASUmJt708QzDuGGbrl27qqioSEVFRdds06dPH3344Yc33S8AwD95Os8AAHA9t/Sa3MSJE/X888/r0qVLV+1rbGzUokWL9L/+1//yWHAAgOBCngEAdKRbejK0YMECvffee/re976nvLw8DRz4zRfRjh07pqKiIl2+fFm//OUvvRIoAKDzI88AADrSLT0ZSkhI0O7duzVkyBAVFBTo0Ucf1aOPPqrnnntOQ4YM0WeffXbVBKgAANwsT+eZTz/9VA899JCSkpIUEhKi999/323/k08+qZCQELfluwM4nDt3TlOnTpXFYlFMTIymT5+uCxcueOJ0AQA+dsuTrl75fs7//M//6Pjx4zIMQwMGDNAdd9zhjfgAAEHGk3mmoaFBw4cP19NPP63Jkye32WbChAlas2aNuf7dkUinTp2qqqoqbdu2Tc3NzXrqqac0c+ZMlZSU3HI8AAD/csvF0BV33HGH7r33Xk/GAgCAyRN5JisrS1lZWddtExkZec1Juo8ePaotW7Zo3759GjVqlCTp9ddf18SJE/XKK68oKSnptuIDAPjWLb0mBwBAZ7Nr1y7Fx8dr4MCBmjVrls6ePWvuKysrU0xMjFkISVJGRoZCQ0O1d+9eX4QLAPCgdj8ZAgAg0E2YMEGTJ09Wv379dOLECT333HPKyspSWVmZunTpIofDofj4eLfPhIWFKTY2Vg6H45rHdblccrlc5rrT6fTaOQAA2o9iCAAQtKZMmWL+PHToUA0bNkx33323du3apXHjxrX7uIWFhVqyZIknQgQAeBGvyQEA8P/dddddiouL0/HjxyVJVqtVNTU1bm1aWlp07ty5a37PSJIKCgpUX19vLqdPn/Zq3ACA9qEYAgDg//vqq6909uxZJSYmSpJsNpvq6upUXl5uttm5c6daW1uVnp5+zeNERkbKYrG4LQAA/8NrcgCATuvChQvmUx5JOnnypCoqKhQbG6vY2FgtWbJE2dnZslqtOnHihH7+85+rf//+yszMlCQNGjRIEyZM0IwZM7Rq1So1NzcrLy9PU6ZMYSQ5AOgEeDIEAOi09u/fr3vuuUf33HOPJCk/P1/33HOPFi5cqC5duujAgQP68Y9/rO9973uaPn26Ro4cqf/8z/90m2to/fr1Sk1N1bhx4zRx4kT98Ic/1JtvvumrUwIAeBBPhgAAndaYMWNkGMY192/duvWGx4iNjWWCVQDopHgyBAAAACAoUQwBAAAACEoUQwAAAACCEsUQAAAAgKBEMQQAAAAgKFEMAQAAAAhKDK0NAACADme321VbW+vVPo4ePerV4yPwUQwBAACgQ9ntdqWmDlJj48UO6a/Z1dQh/SDwUAwBAACgQ9XW1qqx8aLSn14kS2Jfr/VTdbBMhz54Uy0tLV7rA4GNYggAAAA+YUnsq9iUgV47vrPqlNeOjc6BARQAAAAABCWKIQAAAABByafF0KeffqqHHnpISUlJCgkJ0fvvv++2/8knn1RISIjbMmHCBLc2586d09SpU2WxWBQTE6Pp06frwoULHXgWAAAAAAKRT4uhhoYGDR8+XEVFRddsM2HCBFVVVZnLb3/7W7f9U6dO1eHDh7Vt2zZt3rxZn376qWbOnOnt0AEAAAAEOJ8OoJCVlaWsrKzrtomMjJTVam1z39GjR7Vlyxbt27dPo0aNkiS9/vrrmjhxol555RUlJSV5PGYAAAAAnYPff2do165dio+P18CBAzVr1iydPXvW3FdWVqaYmBizEJKkjIwMhYaGau/evdc8psvlktPpdFsAAAAABBe/LoYmTJigt99+Wzt27ND//t//W6WlpcrKytLly5clSQ6HQ/Hx8W6fCQsLU2xsrBwOxzWPW1hYqOjoaHNJTk726nkAAAAA8D9+Pc/QlClTzJ+HDh2qYcOG6e6779auXbs0bty4dh+3oKBA+fn55rrT6aQgAgAAAIKMXxdD33XXXXcpLi5Ox48f17hx42S1WlVTU+PWpqWlRefOnbvm94ykb76HFBkZ6e1wAQAAAo7dbldtba1X+zh69KhXjw/crIAqhr766iudPXtWiYmJkiSbzaa6ujqVl5dr5MiRkqSdO3eqtbVV6enpvgwVgB/piMQuSXFxcUpJSfF6PwDgLXa7Xampg9TYeLFD+mt2NXVIP8C1+LQYunDhgo4fP26unzx5UhUVFYqNjVVsbKyWLFmi7OxsWa1WnThxQj//+c/Vv39/ZWZmSpIGDRqkCRMmaMaMGVq1apWam5uVl5enKVOmMJIcAEkdm9i7dYvSsWNHKYgABKza2lo1Nl5U+tOLZEns67V+qg6W6dAHb6qlpcVrfQA3w6fF0P79+/XAAw+Y61e+x5OTk6Pi4mIdOHBA69atU11dnZKSkjR+/HgtW7bM7RW39evXKy8vT+PGjVNoaKiys7P12muvdfi5APBPHZXYnVWntPetJaqtraUYAhDwLIl9FZsy0GvHd1ad8tqxgVvh02JozJgxMgzjmvu3bt16w2PExsaqpKTEk2EB6IS8ndgBAEDg8euhtQEAAADAWyiGAAAAAAQliiEAAAAAQSmghtYG0LkwlwUAAPAliiEAPsFcFgAAwNcohgD4BHNZAAAAX6MYAuBTzGUBAAB8hQEUAAAAAAQliiEAAAAAQYnX5AAAndann36qX//61yovL1dVVZU2btyoRx55xNxvGIYWLVqk3/zmN6qrq9N9992n4uJiDRgwwGxz7tw5zZ49W5s2bVJoaKiys7O1cuVK9ejRwwdn1Hl0xEiPcXFxSklJ8Xo/AAIXxRAAoNNqaGjQ8OHD9fTTT2vy5MlX7X/55Zf12muvad26derXr5+ef/55ZWZm6siRI+rataskaerUqaqqqtK2bdvU3Nysp556SjNnzlRJSUlHn06n0Fh/VlKIHn/8ca/31a1blI4dO0pBBOCaKIYAAJ1WVlaWsrKy2txnGIZWrFihBQsW6OGHH5Ykvf3220pISND777+vKVOm6OjRo9qyZYv27dunUaNGSZJef/11TZw4Ua+88oqSkpI67Fw6i+aL5yUZGvHYfN3ZL9Vr/TirTmnvW0tUW1tLMQTgmiiGAABB6eTJk3I4HMrIyDC3RUdHKz09XWVlZZoyZYrKysoUExNjFkKSlJGRodDQUO3du1ePPvqoL0LvFHrEp3h1JEkAuBkUQwCAoORwOCRJCQkJbtsTEhLMfQ6HQ/Hx8W77w8LCFBsba7Zpi8vlksvlMtedTqenwgYAeBCjyQEA4GGFhYWKjo42l+TkZF+HBABoA8UQACAoWa1WSVJ1dbXb9urqanOf1WpVTU2N2/6WlhadO3fObNOWgoIC1dfXm8vp06c9HD0AwBMohgAAQalfv36yWq3asWOHuc3pdGrv3r2y2WySJJvNprq6OpWXl5ttdu7cqdbWVqWnp1/z2JGRkbJYLG4LAMD/8J0hAECndeHCBR0/ftxcP3nypCoqKhQbG6uUlBTNmTNHL7zwggYMGGAOrZ2UlGTORTRo0CBNmDBBM2bM0KpVq9Tc3Ky8vDxNmTKFkeQAoBOgGAIAdFr79+/XAw88YK7n5+dLknJycrR27Vr9/Oc/V0NDg2bOnKm6ujr98Ic/1JYtW8w5hiRp/fr1ysvL07hx48xJV1977bUOPxcAgOdRDAEAOq0xY8bIMIxr7g8JCdHSpUu1dOnSa7aJjY1lglUA6KT4zhAAAACAoEQxBAAAACAoUQwBAAAACEoUQwAAAACCkk8HUPj000/161//WuXl5aqqqtLGjRvN4UwlyTAMLVq0SL/5zW9UV1en++67T8XFxRowYIDZ5ty5c5o9e7Y2bdpkjvKzcuVK9ejRwwdn1HkcPXrU633ExcUpJSXF6/0AAAAAbfFpMdTQ0KDhw4fr6aef1uTJk6/a//LLL+u1117TunXrzPkfMjMzdeTIEXPY06lTp6qqqkrbtm1Tc3OznnrqKc2cOZORf9qpsf6spBA9/vjjXu+rW7coHTt2lILIT9ntdtXW1nrt+B1RcAMAAFyPT4uhrKwsZWVltbnPMAytWLFCCxYs0MMPPyxJevvtt5WQkKD3339fU6ZM0dGjR7Vlyxbt27dPo0aNkiS9/vrrmjhxol555RUmxGuH5ovnJRka8dh83dkv1Wv9OKtOae9bS1RbW0sx5IfsdrtSUwepsfGi1/tqdjV5vQ8AAIC2+O08QydPnpTD4VBGRoa5LTo6Wunp6SorK9OUKVNUVlammJgYsxCSpIyMDIWGhmrv3r169NFHfRF6p9AjPkWxKQN9HQZ8pLa2Vo2NF5X+9CJZEvt6pY+qg2U69MGbamlp8crxAQAAbsRviyGHwyFJSkhIcNuekJBg7nM4HIqPj3fbHxYWptjYWLNNW1wul1wul7nudDo9FTbQqVgS+3qtKHZWnfLKcQEAAG5WUI4mV1hYqOjoaHNJTk72dUgAAAAAOpjfFkNWq1WSVF1d7ba9urra3Ge1WlVTU+O2v6WlRefOnTPbtKWgoED19fXmcvr0aQ9HDwAAAMDf+W0x1K9fP1mtVu3YscPc5nQ6tXfvXtlsNkmSzWZTXV2dysvLzTY7d+5Ua2ur0tPTr3nsyMhIWSwWtwUAAABAcPHpd4YuXLig48ePm+snT55URUWFYmNjlZKSojlz5uiFF17QgAEDzKG1k5KSzLmIBg0apAkTJmjGjBlatWqVmpublZeXpylTpjCSHAAAAIDr8mkxtH//fj3wwAPmen5+viQpJydHa9eu1c9//nM1NDRo5syZqqur0w9/+ENt2bLFnGNIktavX6+8vDyNGzfOnHT1tdde6/BzAQAAABBYfFoMjRkzRoZhXHN/SEiIli5dqqVLl16zTWxsLBOsAgAAALhlfvudIQAAAADwJoohAAAAAEGJYggAAABAUPLpd4YA3Dq73a7a2lqv9nH06FGvHh8AAMAfUAwBAcRutys1dZAaGy92SH/NrqYO6QcAAllH3KSSJJfLpcjISK/2wc0wBBuKISCA1NbWqrHxotKfXiRLYl+v9VN1sEyHPnhTLS0tXusDADqDDr1JFRIiXWcUXk/iZph/83bRGhcXp5SUFK/24S8ohoAAZEnsq9iUgV47vrPqlNeODQCdSUffpBrx2Hzd2S/V6/1wM8w/NdaflRSixx9/3Kv9dOsWpWPHjgZFQUQxBAAAcJs66iZVj/gUboYFseaL5yUZXi2KnVWntPetJaqtraUYAgAAvsfAKQC+zdtFcTChGAIAwI8xcAoAeA/FEAAAfoyBUwDAeyiG4FMd8VpGMI2IAqDzYuAUAPA8iiH4REeNhiIF14goAAAAuHkUQ/CJjhgNRQq+EVEAAO68/QYCA08AgY1iCD7FaCgAAG/oyDcQJAaeAAIVxRAAAOh0OuoNBAaeAAIbxRAAAOi0mKQUwPWE+joAAAB8afHixQoJCXFbUlP/+iTh0qVLys3NVa9evdSjRw9lZ2erurrahxEDADyFYggAEPQGDx6sqqoqc/nss8/MfXPnztWmTZv07rvvqrS0VGfOnNHkyZN9GC0AwFN4TQ4AEPTCwsJktVqv2l5fX6/Vq1erpKREY8eOlSStWbNGgwYN0p49ezR69OiODhUA4EE8GQIABL0vv/xSSUlJuuuuuzR16lTZ7XZJUnl5uZqbm5WRkWG2TU1NVUpKisrKynwVLgDAQ3gyBAAIaunp6Vq7dq0GDhyoqqoqLVmyRD/60Y906NAhORwORUREKCYmxu0zCQkJcjgc1zymy+WSy+Uy151Op7fCBwDcBoohAEBQy8rKMn8eNmyY0tPT1adPH/37v/+7unXr1q5jFhYWasmSJZ4KEQDgJRRDCAodMUN4XFycUlJSvN4PAO+KiYnR9773PR0/flwPPvigmpqaVFdX5/Z0qLq6us3vGF1RUFCg/Px8c93pdCo5OdmbYQMA2oFiCJ1aR85A3q1blI4dO0pBBAS4Cxcu6MSJE3riiSc0cuRIhYeHa8eOHcrOzpYkVVZWym63y2azXfMYkZGRioyM7KiQAQDt5NfF0OLFi696zWDgwIE6duyYpG/mfvjZz36mDRs2yOVyKTMzU2+88YYSEhJ8ES78UEfNQO6sOqW9by1RbW0txRAQYP75n/9ZDz30kPr06aMzZ85o0aJF6tKli376058qOjpa06dPV35+vmJjY2WxWDR79mzZbDZGkgOATsCviyHpm7kftm/fbq6Hhf015Llz5+o//uM/9O677yo6Olp5eXmaPHmy/vCHP/giVPgxb89ADiBwffXVV/rpT3+qs2fP6s4779QPf/hD7dmzR3feeackafny5QoNDVV2drbbjTcAQODz+2KIuR8AAN60YcOG6+7v2rWrioqKVFRU1EERAQA6it/PM+SNuR9cLpecTqfbAgAAACC4+HUxdGXuhy1btqi4uFgnT57Uj370I50/f77dcz9I3wx5Gh0dbS6M8AMAAAAEH79+Tc4bcz9IDHkK7/H2EN4dMUQ4AABAsPDrYui7PDH3g8SQp/C8jhzCW5KaXU0d0g8AAEBnFlDFkCfmfgC8oaOG8K46WKZDH7yplpYWr/UBAAAQLPy6GGLuBwQabw/h7aw65bVjAwAABBu/LoaY+wEAAACAt/h1McTcDwAAAAC8xa+H1gYAAAAAb6EYAgAAABCUKIYAAAAABCWKIQAAAABBiWIIAAAAQFCiGAIAAAAQlCiGAAAAAAQliiEAAAAAQYliCAAAAEBQohgCAAAAEJQohgAAAAAEpTBfBwAAncnRo0e93kdcXJxSUlK83g8AIHgFSz6jGAIAD2isPyspRI8//rjX++rWLUrHjh31eQIBAHQ+wZbPKIYAwAOaL56XZGjEY/N1Z79Ur/XjrDqlvW8tUW1tLcUQAMDjgi2fUQwBgAf1iE9RbMpAX4cBAMBtCZZ8xgAKAAAAAIISxRAAAACAoEQxBAAAACAoUQwBAAAACEoUQwAAAACCEsUQAAAAgKBEMQQAAAAgKFEMAQAAAAhKTLoKAAHo6NGjXu8jLi7Op7OCAwDgbRRDABBAGuvPSgrR448/7vW+unWL0rFjRymIAACdVqcphoqKivTrX/9aDodDw4cP1+uvv64f/OAHvg4LADyq+eJ5SYZGPDZfd/ZL9Vo/zqpT2vvWEtXW1lIM/X/kGQDofDpFMfRv//Zvys/P16pVq5Senq4VK1YoMzNTlZWVio+P93V4AOBxPeJTFJsy0NdhBA3yDAB0Tp1iAIVXX31VM2bM0FNPPaW0tDStWrVKUVFReuutt3wdGgCgEyDPAEDnFPBPhpqamlReXq6CggJzW2hoqDIyMlRWVtbmZ1wul1wul7leX18vSXI6nbfc/4ULFyRJ5/5cqRZX4y1//mY5q/4sSar/+kuFh4XQD/0EfD+d6Vw6ZT8Ou6Rv/sa152/jlc8YhuHRuHyBPEM/9EM/wdRP0OUZI8B9/fXXhiRj9+7dbtvnzZtn/OAHP2jzM4sWLTIksbCwsLB4eTl9+nRHpAKvIs+wsLCw+O9yu3km4J8MtUdBQYHy8/PN9dbWVp07d069evVSSIj3KuArnE6nkpOTdfr0aVksFq/3d7uI17uI17uI17uuFa9hGDp//rySkpJ8GJ3v+DrP3Egg/TsjVu8gVu8gVu9oK1ZP5ZmAL4bi4uLUpUsXVVdXu22vrq6W1Wpt8zORkZGKjIx02xYTE+OtEK/JYrH4/T++byNe7yJe7yJe72or3ujoaB9F41mBnGduJJD+nRGrdxCrdxCrd3w3Vk/kmYAfQCEiIkIjR47Ujh07zG2tra3asWOHbDabDyMDAHQG5BkA6LwC/smQJOXn5ysnJ0ejRo3SD37wA61YsUINDQ166qmnfB0aAKATIM8AQOfUKYqhn/zkJ/rLX/6ihQsXyuFwaMSIEdqyZYsSEhJ8HVqbIiMjtWjRoqteofBXxOtdxOtdxOtdgRZvewVanrmRQPq9Eat3EKt3EKt3eDPWEMPoBOOeAgAAAMAtCvjvDAEAAABAe1AMAQAAAAhKFEMAAAAAghLFEAAAAICgRDHkJYsXL1ZISIjbkpqaau6/dOmScnNz1atXL/Xo0UPZ2dlXTejnTZ9++qkeeughJSUlKSQkRO+//77bfsMwtHDhQiUmJqpbt27KyMjQl19+6dbm3Llzmjp1qiwWi2JiYjR9+nRduHDBJ/E++eSTV13vCRMm+CTewsJC3XvvverZs6fi4+P1yCOPqLKy0q3Nzfz+7Xa7Jk2apKioKMXHx2vevHlqaWnxeLw3G/OYMWOuusbPPPOMT2IuLi7WsGHDzMnXbDabPvroI3O/v13fG8XrT9f2u1566SWFhIRozpw55jZ/u75omz/noUDKQeQf7/z/DaS8E0g5J1DzjU9zjQGvWLRokTF48GCjqqrKXP7yl7+Y+5955hkjOTnZ2LFjh7F//35j9OjRxt/+7d92WHwffvih8ctf/tJ47733DEnGxo0b3fa/9NJLRnR0tPH+++8bX3zxhfHjH//Y6Nevn9HY2Gi2mTBhgjF8+HBjz549xn/+538a/fv3N37605/6JN6cnBxjwoQJbtf73Llzbm06Kt7MzExjzZo1xqFDh4yKigpj4sSJRkpKinHhwgWzzY1+/y0tLcaQIUOMjIwM4/PPPzc+/PBDIy4uzigoKPB4vDcb89/93d8ZM2bMcLvG9fX1Pon5gw8+MP7jP/7D+K//+i+jsrLSeO6554zw8HDj0KFDhmH43/W9Ubz+dG2/7Y9//KPRt29fY9iwYcazzz5rbve364u2+XMeCqQcRP7xzv/fQMo7gZRzAjHf+DrXUAx5yaJFi4zhw4e3ua+urs4IDw833n33XXPb0aNHDUlGWVlZB0X4V9/9497a2mpYrVbj17/+tbmtrq7OiIyMNH77298ahmEYR44cMSQZ+/btM9t89NFHRkhIiPH11193aLyG8U0yevjhh6/5GV/GW1NTY0gySktLDcO4ud//hx9+aISGhhoOh8NsU1xcbFgsFsPlcnk13rZiNoxv/oB++4/Ud/k65jvuuMP413/914C4vt+O1zD889qeP3/eGDBggLFt2za3+ALl+iJw8lAg5SDyj/f+/wZa3gmknOPP+cYfcg2vyXnRl19+qaSkJN11112aOnWq7Ha7JKm8vFzNzc3KyMgw26ampiolJUVlZWW+Ctd08uRJORwOt/iio6OVnp5uxldWVqaYmBiNGjXKbJORkaHQ0FDt3bu3w2OWpF27dik+Pl4DBw7UrFmzdPbsWXOfL+Otr6+XJMXGxkq6ud9/WVmZhg4d6jahY2ZmppxOpw4fPuzVeNuK+Yr169crLi5OQ4YMUUFBgS5evGju81XMly9f1oYNG9TQ0CCbzeb31/e78V7hb9c2NzdXkyZNcruOUmD8+8VfBWIeCsQcRP7xfKxX+NvfxkDKOYGQb/wh14Td5jngGtLT07V27VoNHDhQVVVVWrJkiX70ox/p0KFDcjgcioiIUExMjNtnEhIS5HA4fBPwt1yJ4bszq387PofDofj4eLf9YWFhio2N9ck5TJgwQZMnT1a/fv104sQJPffcc8rKylJZWZm6dOnis3hbW1s1Z84c3XfffRoyZIgk3dTv3+FwtHn9r+zzprZilqTHHntMffr0UVJSkg4cOKD58+ersrJS7733nk9iPnjwoGw2my5duqQePXpo48aNSktLU0VFhV9e32vFK/nftd2wYYP+9Kc/ad++fVft8/d/v/irQM1DgZaDyD/eiVXyr7+NgZRzAiXf+EuuoRjykqysLPPnYcOGKT09XX369NG///u/q1u3bj6MrHOaMmWK+fPQoUM1bNgw3X333dq1a5fGjRvns7hyc3N16NAhffbZZz6L4VZdK+aZM2eaPw8dOlSJiYkaN26cTpw4obvvvrujw9TAgQNVUVGh+vp6/e53v1NOTo5KS0s7PI6bda1409LS/Oranj59Ws8++6y2bdumrl27dmjf8CzyUMcg/9y+QMg7gZRzAiHf+FOu4TW5DhITE6Pvfe97On78uKxWq5qamlRXV+fWprq6Wlar1TcBfsuVGL47Yse347NaraqpqXHb39LSonPnzvnFOdx1112Ki4vT8ePHJfkm3ry8PG3evFmffPKJevfubW6/md+/1Wpt8/pf2ect14q5Lenp6ZLkdo07MuaIiAj1799fI0eOVGFhoYYPH66VK1f67fW9Vrxt8eW1LS8vV01Njb7//e8rLCxMYWFhKi0t1WuvvaawsDAlJCT45fXFjQVKHgr0HET+8UysbfHl38ZAyjmBkG/8KddQDHWQCxcu6MSJE0pMTNTIkSMVHh6uHTt2mPsrKytlt9vd3un0lX79+slqtbrF53Q6tXfvXjM+m82muro6lZeXm2127typ1tZW8z+WL3311Vc6e/asEhMTJXVsvIZhKC8vTxs3btTOnTvVr18/t/038/u32Ww6ePCgWwLdtm2bLBaL+ai7I2NuS0VFhSS5XeOOjPm7Wltb5XK5/PL6Xi/etvjy2o4bN04HDx5URUWFuYwaNUpTp041fw6E64urBUoeCvQcRP7xTKxt8ae8E0g5xx/zjV/lmtsfBwJt+dnPfmbs2rXLOHnypPGHP/zByMjIMOLi4oyamhrDML4ZLjAlJcXYuXOnsX//fsNmsxk2m63D4jt//rzx+eefG59//rkhyXj11VeNzz//3Pjzn/9sGMY3w5rGxMQYv//9740DBw4YDz/8cJvDmt5zzz3G3r17jc8++8wYMGCA14bWvl6858+fN/75n//ZKCsrM06ePGls377d+P73v28MGDDAuHTpUofHO2vWLCM6OtrYtWuX29CVFy9eNNvc6Pd/ZbjI8ePHGxUVFcaWLVuMO++802tDW94o5uPHjxtLly419u/fb5w8edL4/e9/b9x1113G/fff75OYf/GLXxilpaXGyZMnjQMHDhi/+MUvjJCQEOPjjz82DMP/ru/14vW3a9uW744+5G/XF23z5zwUSDmI/OOd/7+BlHcCKecEcr7xVa6hGPKSn/zkJ0ZiYqIRERFh/M3f/I3xk5/8xDh+/Li5v7Gx0fjHf/xH44477jCioqKMRx991Kiqquqw+D755BND0lVLTk6OYRjfDG36/PPPGwkJCUZkZKQxbtw4o7Ky0u0YZ8+eNX76058aPXr0MCwWi/HUU08Z58+f7/B4L168aIwfP9648847jfDwcKNPnz7GjBkz3IZa7Mh424pTkrFmzRqzzc38/k+dOmVkZWUZ3bp1M+Li4oyf/exnRnNzs8fjvZmY7Xa7cf/99xuxsbFGZGSk0b9/f2PevHlucxN0ZMxPP/200adPHyMiIsK48847jXHjxplJyTD87/peL15/u7Zt+W6C8rfri7b5cx4KpBxE/vHO/99AyjuBlHMCOd/4KteEGIZh3PxzJAAAAADoHPjOEAAAAICgRDEEAAAAIChRDAEAAAAIShRDAAAAAIISxRAAAACAoEQxBAAAACAoUQwBAAAACEoUQwAAAACCEsUQ4CfGjBmjOXPm+DoMAEAnRZ4BrkYxBAAAACAoUQwBfuDJJ59UaWmpVq5cqZCQEIWEhOjUqVMqLS3VD37wA0VGRioxMVG/+MUv1NLSYn5uzJgxysvLU15enqKjoxUXF6fnn39ehmH48GwAAP6GPAO0jWII8AMrV66UzWbTjBkzVFVVpaqqKoWHh2vixIm699579cUXX6i4uFirV6/WCy+84PbZdevWKSwsTH/84x+1cuVKvfrqq/rXf/1XH50JAMAfkWeAtoX5OgAAUnR0tCIiIhQVFSWr1SpJ+uUvf6nk5GT9y7/8i0JCQpSamqozZ85o/vz5WrhwoUJDv7mXkZycrOXLlyskJEQDBw7UwYMHtXz5cs2YMcOXpwQA8CPkGaBtPBkC/NTRo0dls9kUEhJibrvvvvt04cIFffXVV+a20aNHu7Wx2Wz68ssvdfny5Q6NFwAQWMgzAMUQAAAAgCBFMQT4iYiICLe7bIMGDVJZWZnbl1T/8Ic/qGfPnurdu7e5be/evW7H2bNnjwYMGKAuXbp4P2gAQMAgzwBXoxgC/ETfvn21d+9enTp1SrW1tfrHf/xHnT59WrNnz9axY8f0+9//XosWLVJ+fr75Hrck2e125efnq7KyUr/97W/1+uuv69lnn/XhmQAA/BF5BrhaiMHYiIBf+K//+i/l5OToiy++UGNjo06ePKk///nPmjdvnr744gvFxsYqJydHL7zwgsLCvhn7ZMyYMRo8eLBaW1tVUlKiLl26aNasWXrhhRfc3u8GAIA8A1yNYggIYGPGjNGIESO0YsUKX4cCAOiEyDPo7HhNDgAAAEBQohgCAAAAEJR4TQ4AAABAUOLJEAAAAICgRDEEAAAAIChRDAEAAAAIShRDAAAAAIISxRAAAACAoEQxBAAAACAoUQwBAAAACEoUQwAAAACCEsUQAAAAgKD0/wCLzIDA5ll4YAAAAABJRU5ErkJggg==\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Segundo analisis, posicion media horizontal de los jugadores al tirar a canasta."],"metadata":{"id":"oD5gz8Q0esa_"}},{"cell_type":"code","source":["plt.figure(figsize=(15,4))\n","for i in range(1,3):\n","    n = int(i)+130\n","    plt.subplot(n)\n","    sns.histplot(dfs[f\"df{i}\"][\"left\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"f1rBNo40exKh","executionInfo":{"status":"ok","timestamp":1728287485573,"user_tz":-120,"elapsed":918,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"47107632-96a9-4c67-f73d-90c95153e580"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Tercer analisis: Cuantos tiros han realizado en cada ronda: 0 es para el tiempo de descuento, 1 a 4 es para cada uno de los cuadrantes"],"metadata":{"id":"WJ4-uJFzirlF"}},{"cell_type":"code","source":["for i in range(1,3):\n","    display(dfs[f\"df{i}\"][\"qtr\"].value_counts().sort_index())\n","    print()"],"metadata":{"id":"cuFFlowifAc_","colab":{"base_uri":"https://localhost:8080/","height":562},"executionInfo":{"status":"ok","timestamp":1728287504918,"user_tz":-120,"elapsed":269,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"8057fa74-9368-42bb-a011-a530d57fb87d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["qtr\n","0     32\n","1    321\n","2    406\n","3    374\n","4    400\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>qtr</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>32</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>321</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>406</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>374</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>400</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]},{"output_type":"display_data","data":{"text/plain":["qtr\n","0     10\n","1    330\n","2    329\n","3    385\n","4    380\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>qtr</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>330</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>329</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>385</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>380</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"stream","name":"stdout","text":["\n"]}]},{"cell_type":"markdown","source":["### Cuarto analisis: Cuantos aciertos y fallos han obtenido en cada ronda: 0 es para el tiempo de descuento, 1 a 4 es para cada uno de los cuadrantes"],"metadata":{"id":"z7pdOvMXi6n2"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['qtr', 'result']).count()[\"top\"])\n"],"metadata":{"id":"Kl4vxdMFi_Dt","colab":{"base_uri":"https://localhost:8080/","height":841},"executionInfo":{"status":"ok","timestamp":1728288788654,"user_tz":-120,"elapsed":270,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"63903986-b372-4a3f-9fbe-7e2365bffd82"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["qtr  result\n","0    False      20\n","     True       12\n","1    False     165\n","     True      156\n","2    False     190\n","     True      216\n","3    False     176\n","     True      198\n","4    False     214\n","     True      186\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>qtr</th>\n","      <th>result</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">0</th>\n","      <th>False</th>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>12</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>False</th>\n","      <td>165</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>156</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">2</th>\n","      <th>False</th>\n","      <td>190</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>216</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">3</th>\n","      <th>False</th>\n","      <td>176</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>198</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">4</th>\n","      <th>False</th>\n","      <td>214</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>186</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["qtr  result\n","0    False       6\n","     True        4\n","1    False     156\n","     True      174\n","2    False     168\n","     True      161\n","3    False     206\n","     True      179\n","4    False     195\n","     True      185\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>qtr</th>\n","      <th>result</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">0</th>\n","      <th>False</th>\n","      <td>6</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">1</th>\n","      <th>False</th>\n","      <td>156</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>174</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">2</th>\n","      <th>False</th>\n","      <td>168</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>161</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">3</th>\n","      <th>False</th>\n","      <td>206</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>179</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"2\" valign=\"top\">4</th>\n","      <th>False</th>\n","      <td>195</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>185</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Quinto analisis: revision de tiros segun el tiempo que llevan en pista. En este analisis, se tiene solo en cuenta el tiempo restante por cuadrante"],"metadata":{"id":"T0OlPvKqr4NY"}},{"cell_type":"code","source":["plt.figure(figsize=(15,4))\n","for i in range(1,3):\n","    n = int(i)+130\n","    plt.subplot(n)\n","    sns.histplot(dfs[f\"df{i}\"][\"time_remaining\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"d2SPLmsDsZLY","executionInfo":{"status":"ok","timestamp":1728288492516,"user_tz":-120,"elapsed":555,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"20201a7a-bc08-415e-a1c4-06ce295839ec"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"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\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Sexto analisis: revision de tiros segun el tiempo total en pista"],"metadata":{"id":"bSnupqozsww_"}},{"cell_type":"code","source":["plt.figure(figsize=(15,4))\n","for i in range(1,3):\n","    n = int(i)+130\n","    plt.subplot(n)\n","    sns.histplot(dfs[f\"df{i}\"][\"time_remaining_total\"])"],"metadata":{"id":"u_4mkeL4s0fo","executionInfo":{"status":"ok","timestamp":1728288494931,"user_tz":-120,"elapsed":943,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"16b20179-b8b6-480b-8d2b-1a2fa38dbd91","colab":{"base_uri":"https://localhost:8080/","height":388}},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Septimo analisis: Cuantos tiros han acertado vs cuantos han fallado cada uno\n"],"metadata":{"id":"gNG3Nei7BcN5"}},{"cell_type":"code","source":["  for i in range(1,3):\n","    display(dfs[f\"df{i}\"].groupby(['result']).count()[\"top\"])\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"MhqGWwVsCSpZ","executionInfo":{"status":"ok","timestamp":1728288821240,"user_tz":-120,"elapsed":249,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"0e64ec81-c864-412e-ae52-4deaafe1783d"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["result\n","False    765\n","True     768\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>result</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>765</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>768</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["result\n","False    731\n","True     703\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>result</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>731</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>703</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Octavo analisis: Porcentaje de tiros acertados seg√∫n el cuarto de tiempo en el que se esta"],"metadata":{"id":"KbK9Jri5DSLR"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['qtr']).agg({\"result\" : \"mean\"}))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":458},"id":"wpfMW4_IDYOx","executionInfo":{"status":"ok","timestamp":1728289060600,"user_tz":-120,"elapsed":277,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"3e8b9f33-ce93-443f-df01-adbc7a3b891f"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["       result\n","qtr          \n","0    0.375000\n","1    0.485981\n","2    0.532020\n","3    0.529412\n","4    0.465000"],"text/html":["\n","  <div id=\"df-9196acd4-1dfa-4c04-84d9-8ae2838f73ca\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>result</th>\n","    </tr>\n","    <tr>\n","      <th>qtr</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.375000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.485981</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.532020</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.529412</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.465000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-9196acd4-1dfa-4c04-84d9-8ae2838f73ca')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-9196acd4-1dfa-4c04-84d9-8ae2838f73ca button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-9196acd4-1dfa-4c04-84d9-8ae2838f73ca');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e37ad17e-4aab-4712-bc1c-2ca4829e3ca4\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e37ad17e-4aab-4712-bc1c-2ca4829e3ca4')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e37ad17e-4aab-4712-bc1c-2ca4829e3ca4 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06403448398560309,\n        \"min\": 0.375,\n        \"max\": 0.5320197044334976,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.48598130841121495,\n          0.465,\n          0.5320197044334976\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       result\n","qtr          \n","0    0.400000\n","1    0.527273\n","2    0.489362\n","3    0.464935\n","4    0.486842"],"text/html":["\n","  <div id=\"df-5b727aba-5bc6-4373-8f6f-0f3edd54f130\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>result</th>\n","    </tr>\n","    <tr>\n","      <th>qtr</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0.400000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>0.527273</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>0.489362</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.464935</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>0.486842</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5b727aba-5bc6-4373-8f6f-0f3edd54f130')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5b727aba-5bc6-4373-8f6f-0f3edd54f130 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5b727aba-5bc6-4373-8f6f-0f3edd54f130');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-412f567b-9e31-4cde-8249-a457f4bdcd46\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-412f567b-9e31-4cde-8249-a457f4bdcd46')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-412f567b-9e31-4cde-8249-a457f4bdcd46 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 5,\n  \"fields\": [\n    {\n      \"column\": \"qtr\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 1,\n        \"min\": 0,\n        \"max\": 4,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          1,\n          4,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0468949716800421,\n        \"min\": 0.4,\n        \"max\": 0.5272727272727272,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.5272727272727272,\n          0.4868421052631579,\n          0.48936170212765956\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["### Noveno analisis, tiros de dos puntos vs tiros de tres puntos"],"metadata":{"id":"KH30K6w3DtRJ"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['shot_type']).count()[\"top\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"zKriLONHD3Hi","executionInfo":{"status":"ok","timestamp":1728289148129,"user_tz":-120,"elapsed":282,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"cefee363-6f51-4c8a-e051-4249142a72d3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["shot_type\n","2    1044\n","3     489\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>shot_type</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>1044</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>489</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["shot_type\n","2    648\n","3    786\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>shot_type</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>648</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>786</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Decimo analisis, porcentaje de acierto entre dobles y triples"],"metadata":{"id":"4o9TD0zKD7Wz"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['shot_type']).agg({\"result\" : \"mean\"}))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"S9Z_ozsIEEBp","executionInfo":{"status":"ok","timestamp":1728289219903,"user_tz":-120,"elapsed":252,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"33d156b0-6a92-4452-a7bf-6be11c95a7d9"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["             result\n","shot_type          \n","2          0.590038\n","3          0.310838"],"text/html":["\n","  <div id=\"df-747eef3e-da56-4131-9703-55b71d445d7a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>result</th>\n","    </tr>\n","    <tr>\n","      <th>shot_type</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>0.590038</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.310838</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-747eef3e-da56-4131-9703-55b71d445d7a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-747eef3e-da56-4131-9703-55b71d445d7a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-747eef3e-da56-4131-9703-55b71d445d7a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-db3b03b3-baa9-4f3b-b6a3-9d305f14dbac\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-db3b03b3-baa9-4f3b-b6a3-9d305f14dbac')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-db3b03b3-baa9-4f3b-b6a3-9d305f14dbac button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.19742412022973957,\n        \"min\": 0.310838445807771,\n        \"max\": 0.5900383141762452,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.310838445807771,\n          0.5900383141762452\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["             result\n","shot_type          \n","2          0.577160\n","3          0.418575"],"text/html":["\n","  <div id=\"df-aced141e-2001-41e8-9f11-ed32a7a73c2c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>result</th>\n","    </tr>\n","    <tr>\n","      <th>shot_type</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2</th>\n","      <td>0.577160</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>0.418575</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-aced141e-2001-41e8-9f11-ed32a7a73c2c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-aced141e-2001-41e8-9f11-ed32a7a73c2c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-aced141e-2001-41e8-9f11-ed32a7a73c2c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f20e4564-1119-4061-ac77-4b0edd48b6e0\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f20e4564-1119-4061-ac77-4b0edd48b6e0')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f20e4564-1119-4061-ac77-4b0edd48b6e0 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 2,\n        \"max\": 3,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          3,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.11213683310165516,\n        \"min\": 0.41857506361323155,\n        \"max\": 0.5771604938271605,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.41857506361323155,\n          0.5771604938271605\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["###Undecimo analisis: revision de distancia en tiros"],"metadata":{"id":"HIoCSBk3ESBK"}},{"cell_type":"code","source":["plt.figure(figsize=(15,4))\n","for i in range(1,3):\n","    n = int(i)+130\n","    plt.subplot(n)\n","    sns.histplot(dfs[f\"df{i}\"][\"distance_ft\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"IvNn2F-1EW-B","executionInfo":{"status":"ok","timestamp":1728289306584,"user_tz":-120,"elapsed":578,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"5e1f6934-b3bc-4d32-a7bf-6856bd4c43de"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Duodecimo analisis: como afecta el liderato al numero de tiros"],"metadata":{"id":"K2JLC7FME3Rb"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['lead']).count()[\"top\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"vJs77_2sE2iC","executionInfo":{"status":"ok","timestamp":1728289443866,"user_tz":-120,"elapsed":254,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"dd974551-67b9-4755-d708-917d4fe0f2f4"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["lead\n","False    755\n","True     778\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>755</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>778</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["lead\n","False    712\n","True     722\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>712</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>722</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Analisis 13¬∫: Como afecta el liderato a la precisi√≥n de los tiros"],"metadata":{"id":"LBZCK0xkHHqL"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['lead']).agg({\"result\" : \"mean\"}))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"swJehmflHMkj","executionInfo":{"status":"ok","timestamp":1728290026137,"user_tz":-120,"elapsed":281,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"5905c287-c5e8-4736-fed1-42db8a1cedc5"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["         result\n","lead           \n","False  0.454305\n","True   0.546272"],"text/html":["\n","  <div id=\"df-783e49f5-4a0a-4b09-a0c5-457c6ffbb8d7\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>result</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>0.454305</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>0.546272</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-783e49f5-4a0a-4b09-a0c5-457c6ffbb8d7')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-783e49f5-4a0a-4b09-a0c5-457c6ffbb8d7 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-783e49f5-4a0a-4b09-a0c5-457c6ffbb8d7');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-23f8bf99-cff3-4731-8217-4cfe2cff79ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-23f8bf99-cff3-4731-8217-4cfe2cff79ea')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-23f8bf99-cff3-4731-8217-4cfe2cff79ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.06503109590983586,\n        \"min\": 0.4543046357615894,\n        \"max\": 0.5462724935732648,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.5462724935732648,\n          0.4543046357615894\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["         result\n","lead           \n","False  0.432584\n","True   0.547091"],"text/html":["\n","  <div id=\"df-e27a75a7-2e2f-4e91-9f52-6c84bbf762cc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>result</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>0.432584</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>0.547091</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e27a75a7-2e2f-4e91-9f52-6c84bbf762cc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e27a75a7-2e2f-4e91-9f52-6c84bbf762cc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e27a75a7-2e2f-4e91-9f52-6c84bbf762cc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a50fae79-98ce-4fda-bbd4-1760a1bebe38\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a50fae79-98ce-4fda-bbd4-1760a1bebe38')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a50fae79-98ce-4fda-bbd4-1760a1bebe38 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"result\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.08096877736578506,\n        \"min\": 0.43258426966292135,\n        \"max\": 0.5470914127423823,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          0.5470914127423823,\n          0.43258426966292135\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["###Analisis 14¬∫: Como afecta el liderato al tipo de tiros"],"metadata":{"id":"pkO0mSvFHT3L"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['lead']).agg({\"shot_type\" : \"mean\"}))"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":270},"id":"mSmIRv2XHXoK","executionInfo":{"status":"ok","timestamp":1728290073071,"user_tz":-120,"elapsed":274,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"6d7f33d1-cd54-4264-83b1-c293a1e514bc"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["       shot_type\n","lead            \n","False   2.316556\n","True    2.321337"],"text/html":["\n","  <div id=\"df-c2739fd1-9272-402c-b972-3eed8f0812fc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>shot_type</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>2.316556</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>2.321337</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c2739fd1-9272-402c-b972-3eed8f0812fc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c2739fd1-9272-402c-b972-3eed8f0812fc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c2739fd1-9272-402c-b972-3eed8f0812fc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-7aa176ac-125a-467f-879b-7ad2474ee073\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-7aa176ac-125a-467f-879b-7ad2474ee073')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-7aa176ac-125a-467f-879b-7ad2474ee073 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.0033803024252573107,\n        \"min\": 2.3165562913907283,\n        \"max\": 2.32133676092545,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2.32133676092545,\n          2.3165562913907283\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["       shot_type\n","lead            \n","False   2.558989\n","True    2.537396"],"text/html":["\n","  <div id=\"df-74f8775e-1e0f-44e6-b65a-3517776f557b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>shot_type</th>\n","    </tr>\n","    <tr>\n","      <th>lead</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <td>2.558989</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <td>2.537396</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-74f8775e-1e0f-44e6-b65a-3517776f557b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-74f8775e-1e0f-44e6-b65a-3517776f557b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-74f8775e-1e0f-44e6-b65a-3517776f557b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-65dc1ab4-db6f-415f-ac9a-e88728437b23\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-65dc1ab4-db6f-415f-ac9a-e88728437b23')\"\n","            title=\"Suggest charts\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-65dc1ab4-db6f-415f-ac9a-e88728437b23 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"  display(dfs[f\\\"df{i}\\\"]\",\n  \"rows\": 2,\n  \"fields\": [\n    {\n      \"column\": \"lead\",\n      \"properties\": {\n        \"dtype\": \"boolean\",\n        \"num_unique_values\": 2,\n        \"samples\": [\n          true,\n          false\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"shot_type\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.015268303695980808,\n        \"min\": 2.5373961218836567,\n        \"max\": 2.558988764044944,\n        \"num_unique_values\": 2,\n        \"samples\": [\n          2.5373961218836567,\n          2.558988764044944\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"markdown","source":["### Analisis 15¬∫: Como afecta la diferencia de puntos a la eleccion del tipo de tiros"],"metadata":{"id":"Q_7OrK6uHlqs"}},{"cell_type":"code","source":["plt.figure(figsize=(15,4))\n","for i in range(1,3):\n","    n = int(i)+130\n","    plt.subplot(n)\n","    sns.boxplot(x=\"shot_type\", y=\"dif_points\", data=dfs[f\"df{i}\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":388},"id":"T8j10TuvHshq","executionInfo":{"status":"ok","timestamp":1728290165772,"user_tz":-120,"elapsed":587,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"b64eed4b-3286-4a58-8695-0bee67a5579e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x400 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["###Analisis 16¬∫: Contabilizaci√≥n de tiros seg√∫n el color"],"metadata":{"id":"mJTIvH8HH0OT"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['color']).count()[\"top\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"8LhEVm1UH63b","executionInfo":{"status":"ok","timestamp":1728290222686,"user_tz":-120,"elapsed":302,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"02506155-42c8-4109-a532-93290b04500e"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["color\n","green    768\n","red      765\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>color</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>green</th>\n","      <td>768</td>\n","    </tr>\n","    <tr>\n","      <th>red</th>\n","      <td>765</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["color\n","green    703\n","red      731\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>color</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>green</th>\n","      <td>703</td>\n","    </tr>\n","    <tr>\n","      <th>red</th>\n","      <td>731</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Analisis 17¬∫: Como afecta al color al acierto o fallo"],"metadata":{"id":"7a2DZ4-CIFIb"}},{"cell_type":"code","source":["for i in range(1,3):\n","  display(dfs[f\"df{i}\"].groupby(['result', 'color']).count()[\"top\"])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":339},"id":"QRN3dOmwIKtS","executionInfo":{"status":"ok","timestamp":1728290429730,"user_tz":-120,"elapsed":306,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"4bb1f459-2009-4318-ce9e-78e71f0742da"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["result  color\n","False   red      765\n","True    green    768\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>result</th>\n","      <th>color</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <th>red</th>\n","      <td>765</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <th>green</th>\n","      <td>768</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["result  color\n","False   red      731\n","True    green    703\n","Name: top, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>top</th>\n","    </tr>\n","    <tr>\n","      <th>result</th>\n","      <th>color</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>False</th>\n","      <th>red</th>\n","      <td>731</td>\n","    </tr>\n","    <tr>\n","      <th>True</th>\n","      <th>green</th>\n","      <td>703</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{}}]},{"cell_type":"markdown","source":["### Analisis 18¬∫: Heatmap de posicion"],"metadata":{"id":"15PvMY8xJOlj"}},{"cell_type":"code","source":["\n","# Crear un gr√°fico de dispersi√≥n\n","plt.figure(figsize=(15, 15))\n","plt.title('Mapa de Calor de Tiros de LeBron James')\n","plt.xlim(0, 400)  # Ajusta seg√∫n el tama√±o de la cancha\n","plt.ylim(0, 500)   # Ajusta seg√∫n el tama√±o de la cancha\n","\n","# Crear el mapa de calor\n","heatmap_data = pd.DataFrame(data={'x': dfs[\"df1\"]['top'], 'y':  dfs[\"df1\"]['left']})\n","heatmap, xedges, yedges = np.histogram2d(heatmap_data['x'], heatmap_data['y'], bins=(30, 30))\n","\n","# Convierta el histograma a un formato adecuado para el mapa de calor\n","heatmap = np.rot90(heatmap)\n","heatmap = np.flipud(heatmap)\n","\n","# Usar Seaborn para dibujar el mapa de calor\n","sns.heatmap(heatmap, cmap='YlGnBu', cbar=True, xticklabels=xedges, yticklabels=yedges)\n","\n","plt.show()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"cE0kprFWKHa9","executionInfo":{"status":"ok","timestamp":1728291165560,"user_tz":-120,"elapsed":1492,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"4cc984c8-ee3b-49c5-8a36-03662d1e56b7"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1500x1500 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["### Analisis 19¬∫ Tendencia descendente al aumentar la distancia"],"metadata":{"id":"dwnk-ITRLtUE"}},{"cell_type":"code","source":["bins = [0, 5, 10, 15, 20, 25, 30, 35, 40]  # Ajusta seg√∫n lo que necesites\n","labels = ['0-5', '5-10', '10-15', '15-20', '20-25', '25-30', '30-35', '35-40']\n","\n","# Crear una nueva columna 'rango_distancia'\n","dfs[\"df1\"]['rango_distancia'] = pd.cut(dfs[\"df1\"]['distance_ft'], bins=bins, labels=labels, right=False)\n","\n","# Calcular la precisi√≥n por rango de distancia\n","precision = dfs[\"df1\"].groupby('rango_distancia')['result'].agg(['count', 'sum'])\n","precision['precision'] = (precision['sum'] / precision['count']) * 100\n","\n","# Graficar\n","plt.figure(figsize=(10, 6))\n","plt.plot(precision.index, precision['precision'], marker='o')\n","plt.title('Tendencia de Precisi√≥n de LeBron James seg√∫n Distancia')\n","plt.xlabel('Rango de Distancia (pies)')\n","plt.ylabel('Precisi√≥n (%)')\n","plt.grid()\n","plt.xticks(rotation=45)\n","plt.ylim(0, 100)  # Para mostrar el porcentaje\n","plt.show()\n","\n","\n","bins = [0, 5, 10, 15, 20, 25, 30, 35, 40]  # Ajusta seg√∫n lo que necesites\n","labels = ['0-5', '5-10', '10-15', '15-20', '20-25', '25-30', '30-35', '35-40']\n","\n","# Crear una nueva columna 'rango_distancia'\n","dfs[\"df2\"]['rango_distancia'] = pd.cut(dfs[\"df2\"]['distance_ft'], bins=bins, labels=labels, right=False)\n","\n","# Calcular la precisi√≥n por rango de distancia\n","precision = dfs[\"df2\"].groupby('rango_distancia')['result'].agg(['count', 'sum'])\n","precision['precision'] = (precision['sum'] / precision['count']) * 100\n","\n","# Graficar\n","plt.figure(figsize=(10, 6))\n","plt.plot(precision.index, precision['precision'], marker='o')\n","plt.title('Tendencia de Precisi√≥n de Stephen Curry seg√∫n Distancia')\n","plt.xlabel('Rango de Distancia (pies)')\n","plt.ylabel('Precisi√≥n (%)')\n","plt.grid()\n","plt.xticks(rotation=45)\n","plt.ylim(0, 100)  # Para mostrar el porcentaje\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"GyQGW8VzMcZG","executionInfo":{"status":"ok","timestamp":1728291508680,"user_tz":-120,"elapsed":914,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"c372bd62-1ec8-4ac9-f32b-70a1daee01e3"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1000x600 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["## Arbol de decisi√≥n para cada jugador."],"metadata":{"id":"NLE5C_kvRb4u"}},{"cell_type":"code","source":["from sklearn.tree import DecisionTreeClassifier\n","from sklearn.model_selection import train_test_split\n","from sklearn.metrics import accuracy_score\n","\n","df_lebron = dfs[\"df1\"]\n","#df_stephen = dfs[\"df2\"]\n","\n","X = df_lebron[['qtr', 'time_remaining', 'shot_type', 'distance_ft', 'lead']]\n","y = df_lebron['result']\n","\n","X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)"],"metadata":{"id":"cMP5fi9ARjW9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# Crear el modelo\n","modelo = DecisionTreeClassifier(random_state=42)\n","\n","# Entrenar el modelo\n","modelo.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":80},"id":"kA2O7ngaSmdv","executionInfo":{"status":"ok","timestamp":1728293030710,"user_tz":-120,"elapsed":273,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"a99b4d39-6a49-481d-80fe-a88e7ed4fd42"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["DecisionTreeClassifier(random_state=42)"],"text/html":["<style>#sk-container-id-1 {\n","  /* Definition of color scheme common for light and dark mode */\n","  --sklearn-color-text: black;\n","  --sklearn-color-line: gray;\n","  /* Definition of color scheme for unfitted estimators */\n","  --sklearn-color-unfitted-level-0: #fff5e6;\n","  --sklearn-color-unfitted-level-1: #f6e4d2;\n","  --sklearn-color-unfitted-level-2: #ffe0b3;\n","  --sklearn-color-unfitted-level-3: chocolate;\n","  /* Definition of color scheme for fitted estimators */\n","  --sklearn-color-fitted-level-0: #f0f8ff;\n","  --sklearn-color-fitted-level-1: #d4ebff;\n","  --sklearn-color-fitted-level-2: #b3dbfd;\n","  --sklearn-color-fitted-level-3: cornflowerblue;\n","\n","  /* Specific color for light theme */\n","  --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, white)));\n","  --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, black)));\n","  --sklearn-color-icon: #696969;\n","\n","  @media (prefers-color-scheme: dark) {\n","    /* Redefinition of color scheme for dark theme */\n","    --sklearn-color-text-on-default-background: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-background: var(--sg-background-color, var(--theme-background, var(--jp-layout-color0, #111)));\n","    --sklearn-color-border-box: var(--sg-text-color, var(--theme-code-foreground, var(--jp-content-font-color1, white)));\n","    --sklearn-color-icon: #878787;\n","  }\n","}\n","\n","#sk-container-id-1 {\n","  color: var(--sklearn-color-text);\n","}\n","\n","#sk-container-id-1 pre {\n","  padding: 0;\n","}\n","\n","#sk-container-id-1 input.sk-hidden--visually {\n","  border: 0;\n","  clip: rect(1px 1px 1px 1px);\n","  clip: rect(1px, 1px, 1px, 1px);\n","  height: 1px;\n","  margin: -1px;\n","  overflow: hidden;\n","  padding: 0;\n","  position: absolute;\n","  width: 1px;\n","}\n","\n","#sk-container-id-1 div.sk-dashed-wrapped {\n","  border: 1px dashed var(--sklearn-color-line);\n","  margin: 0 0.4em 0.5em 0.4em;\n","  box-sizing: border-box;\n","  padding-bottom: 0.4em;\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","#sk-container-id-1 div.sk-container {\n","  /* jupyter's `normalize.less` sets `[hidden] { display: none; }`\n","     but bootstrap.min.css set `[hidden] { display: none !important; }`\n","     so we also need the `!important` here to be able to override the\n","     default hidden behavior on the sphinx rendered scikit-learn.org.\n","     See: https://github.com/scikit-learn/scikit-learn/issues/21755 */\n","  display: inline-block !important;\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-text-repr-fallback {\n","  display: none;\n","}\n","\n","div.sk-parallel-item,\n","div.sk-serial,\n","div.sk-item {\n","  /* draw centered vertical line to link estimators */\n","  background-image: linear-gradient(var(--sklearn-color-text-on-default-background), var(--sklearn-color-text-on-default-background));\n","  background-size: 2px 100%;\n","  background-repeat: no-repeat;\n","  background-position: center center;\n","}\n","\n","/* Parallel-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-parallel-item::after {\n","  content: \"\";\n","  width: 100%;\n","  border-bottom: 2px solid var(--sklearn-color-text-on-default-background);\n","  flex-grow: 1;\n","}\n","\n","#sk-container-id-1 div.sk-parallel {\n","  display: flex;\n","  align-items: stretch;\n","  justify-content: center;\n","  background-color: var(--sklearn-color-background);\n","  position: relative;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item {\n","  display: flex;\n","  flex-direction: column;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:first-child::after {\n","  align-self: flex-end;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:last-child::after {\n","  align-self: flex-start;\n","  width: 50%;\n","}\n","\n","#sk-container-id-1 div.sk-parallel-item:only-child::after {\n","  width: 0;\n","}\n","\n","/* Serial-specific style estimator block */\n","\n","#sk-container-id-1 div.sk-serial {\n","  display: flex;\n","  flex-direction: column;\n","  align-items: center;\n","  background-color: var(--sklearn-color-background);\n","  padding-right: 1em;\n","  padding-left: 1em;\n","}\n","\n","\n","/* Toggleable style: style used for estimator/Pipeline/ColumnTransformer box that is\n","clickable and can be expanded/collapsed.\n","- Pipeline and ColumnTransformer use this feature and define the default style\n","- Estimators will overwrite some part of the style using the `sk-estimator` class\n","*/\n","\n","/* Pipeline and ColumnTransformer style (default) */\n","\n","#sk-container-id-1 div.sk-toggleable {\n","  /* Default theme specific background. It is overwritten whether we have a\n","  specific estimator or a Pipeline/ColumnTransformer */\n","  background-color: var(--sklearn-color-background);\n","}\n","\n","/* Toggleable label */\n","#sk-container-id-1 label.sk-toggleable__label {\n","  cursor: pointer;\n","  display: block;\n","  width: 100%;\n","  margin-bottom: 0;\n","  padding: 0.5em;\n","  box-sizing: border-box;\n","  text-align: center;\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:before {\n","  /* Arrow on the left of the label */\n","  content: \"‚ñ∏\";\n","  float: left;\n","  margin-right: 0.25em;\n","  color: var(--sklearn-color-icon);\n","}\n","\n","#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {\n","  color: var(--sklearn-color-text);\n","}\n","\n","/* Toggleable content - dropdown */\n","\n","#sk-container-id-1 div.sk-toggleable__content {\n","  max-height: 0;\n","  max-width: 0;\n","  overflow: hidden;\n","  text-align: left;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content pre {\n","  margin: 0.2em;\n","  border-radius: 0.25em;\n","  color: var(--sklearn-color-text);\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-toggleable__content.fitted pre {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {\n","  /* Expand drop-down */\n","  max-height: 200px;\n","  max-width: 100%;\n","  overflow: auto;\n","}\n","\n","#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {\n","  content: \"‚ñæ\";\n","}\n","\n","/* Pipeline/ColumnTransformer-specific style */\n","\n","#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator-specific style */\n","\n","/* Colorize estimator box */\n","#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted input.sk-toggleable__control:checked~label.sk-toggleable__label {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-label label.sk-toggleable__label,\n","#sk-container-id-1 div.sk-label label {\n","  /* The background is the default theme color */\n","  color: var(--sklearn-color-text-on-default-background);\n","}\n","\n","/* On hover, darken the color of the background */\n","#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","/* Label box, darken color on hover, fitted */\n","#sk-container-id-1 div.sk-label.fitted:hover label.sk-toggleable__label.fitted {\n","  color: var(--sklearn-color-text);\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Estimator label */\n","\n","#sk-container-id-1 div.sk-label label {\n","  font-family: monospace;\n","  font-weight: bold;\n","  display: inline-block;\n","  line-height: 1.2em;\n","}\n","\n","#sk-container-id-1 div.sk-label-container {\n","  text-align: center;\n","}\n","\n","/* Estimator-specific */\n","#sk-container-id-1 div.sk-estimator {\n","  font-family: monospace;\n","  border: 1px dotted var(--sklearn-color-border-box);\n","  border-radius: 0.25em;\n","  box-sizing: border-box;\n","  margin-bottom: 0.5em;\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-0);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-0);\n","}\n","\n","/* on hover */\n","#sk-container-id-1 div.sk-estimator:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-2);\n","}\n","\n","#sk-container-id-1 div.sk-estimator.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-2);\n","}\n","\n","/* Specification for estimator info (e.g. \"i\" and \"?\") */\n","\n","/* Common style for \"i\" and \"?\" */\n","\n",".sk-estimator-doc-link,\n","a:link.sk-estimator-doc-link,\n","a:visited.sk-estimator-doc-link {\n","  float: right;\n","  font-size: smaller;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1em;\n","  height: 1em;\n","  width: 1em;\n","  text-decoration: none !important;\n","  margin-left: 1ex;\n","  /* unfitted */\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-unfitted-level-1);\n","}\n","\n",".sk-estimator-doc-link.fitted,\n","a:link.sk-estimator-doc-link.fitted,\n","a:visited.sk-estimator-doc-link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","div.sk-estimator:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link:hover,\n",".sk-estimator-doc-link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","div.sk-estimator.fitted:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover,\n","div.sk-label-container:hover .sk-estimator-doc-link.fitted:hover,\n",".sk-estimator-doc-link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","/* Span, style for the box shown on hovering the info icon */\n",".sk-estimator-doc-link span {\n","  display: none;\n","  z-index: 9999;\n","  position: relative;\n","  font-weight: normal;\n","  right: .2ex;\n","  padding: .5ex;\n","  margin: .5ex;\n","  width: min-content;\n","  min-width: 20ex;\n","  max-width: 50ex;\n","  color: var(--sklearn-color-text);\n","  box-shadow: 2pt 2pt 4pt #999;\n","  /* unfitted */\n","  background: var(--sklearn-color-unfitted-level-0);\n","  border: .5pt solid var(--sklearn-color-unfitted-level-3);\n","}\n","\n",".sk-estimator-doc-link.fitted span {\n","  /* fitted */\n","  background: var(--sklearn-color-fitted-level-0);\n","  border: var(--sklearn-color-fitted-level-3);\n","}\n","\n",".sk-estimator-doc-link:hover span {\n","  display: block;\n","}\n","\n","/* \"?\"-specific style due to the `<a>` HTML tag */\n","\n","#sk-container-id-1 a.estimator_doc_link {\n","  float: right;\n","  font-size: 1rem;\n","  line-height: 1em;\n","  font-family: monospace;\n","  background-color: var(--sklearn-color-background);\n","  border-radius: 1rem;\n","  height: 1rem;\n","  width: 1rem;\n","  text-decoration: none;\n","  /* unfitted */\n","  color: var(--sklearn-color-unfitted-level-1);\n","  border: var(--sklearn-color-unfitted-level-1) 1pt solid;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted {\n","  /* fitted */\n","  border: var(--sklearn-color-fitted-level-1) 1pt solid;\n","  color: var(--sklearn-color-fitted-level-1);\n","}\n","\n","/* On hover */\n","#sk-container-id-1 a.estimator_doc_link:hover {\n","  /* unfitted */\n","  background-color: var(--sklearn-color-unfitted-level-3);\n","  color: var(--sklearn-color-background);\n","  text-decoration: none;\n","}\n","\n","#sk-container-id-1 a.estimator_doc_link.fitted:hover {\n","  /* fitted */\n","  background-color: var(--sklearn-color-fitted-level-3);\n","}\n","</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>DecisionTreeClassifier(random_state=42)</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator fitted sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label fitted sk-toggleable__label-arrow fitted\">&nbsp;&nbsp;DecisionTreeClassifier<a class=\"sk-estimator-doc-link fitted\" rel=\"noreferrer\" target=\"_blank\" href=\"https://scikit-learn.org/1.5/modules/generated/sklearn.tree.DecisionTreeClassifier.html\">?<span>Documentation for DecisionTreeClassifier</span></a><span class=\"sk-estimator-doc-link fitted\">i<span>Fitted</span></span></label><div class=\"sk-toggleable__content fitted\"><pre>DecisionTreeClassifier(random_state=42)</pre></div> </div></div></div></div>"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["y_pred = modelo.predict(X_test)\n","\n","# Calcular la precisi√≥n\n","accuracy = accuracy_score(y_test, y_pred)\n","print(f'Precisi√≥n: {accuracy:.2f}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ayKSMDD-SrS3","executionInfo":{"status":"ok","timestamp":1728293088310,"user_tz":-120,"elapsed":265,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"e390de27-b83c-4724-b3b9-fc631cb395d2"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Precisi√≥n: 0.57\n"]}]},{"cell_type":"markdown","source":["### Visualizar arbol de decision"],"metadata":{"id":"7H8fyd5kS-Of"}},{"cell_type":"code","source":["!pip install graphviz\n","!pip install pydotplus\n","!pip install sklearn"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"yBh_ajb1TAdX","executionInfo":{"status":"ok","timestamp":1728294768913,"user_tz":-120,"elapsed":9324,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"5e673393-1a85-44ec-9f91-2cbb25e2261c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Requirement already satisfied: graphviz in /usr/local/lib/python3.10/dist-packages (0.20.3)\n","Requirement already satisfied: pydotplus in /usr/local/lib/python3.10/dist-packages (2.0.2)\n","Requirement already satisfied: pyparsing>=2.0.1 in /usr/local/lib/python3.10/dist-packages (from pydotplus) (3.1.4)\n","Collecting sklearn\n","  Downloading sklearn-0.0.post12.tar.gz (2.6 kB)\n","  \u001b[1;31merror\u001b[0m: \u001b[1msubprocess-exited-with-error\u001b[0m\n","  \n","  \u001b[31m√ó\u001b[0m \u001b[32mpython setup.py egg_info\u001b[0m did not run successfully.\n","  \u001b[31m‚îÇ\u001b[0m exit code: \u001b[1;36m1\u001b[0m\n","  \u001b[31m‚ï∞‚îÄ>\u001b[0m See above for output.\n","  \n","  \u001b[1;35mnote\u001b[0m: This error originates from a subprocess, and is likely not a problem with pip.\n","  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25herror\n","\u001b[1;31merror\u001b[0m: \u001b[1mmetadata-generation-failed\u001b[0m\n","\n","\u001b[31m√ó\u001b[0m Encountered error while generating package metadata.\n","\u001b[31m‚ï∞‚îÄ>\u001b[0m See above for output.\n","\n","\u001b[1;35mnote\u001b[0m: This is an issue with the package mentioned above, not pip.\n","\u001b[1;36mhint\u001b[0m: See above for details.\n"]}]},{"cell_type":"code","source":["from sklearn.tree import export_graphviz\n","from six import StringIO\n","from IPython.display import Image\n","import pydotplus\n","\n","dot_data = StringIO()\n","export_graphviz(modelo, out_file=dot_data,\n","                filled=True, rounded=True,\n","                special_characters=True,feature_names = ['qtr', 'time_remaining', 'shot_type', 'distance_ft', 'lead'] ,class_names=['0','1'])\n","graph = pydotplus.graph_from_dot_data(dot_data.getvalue())\n","graph.write_png('diabetes.png')\n","Image(graph.create_png())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":349,"output_embedded_package_id":"1Xeb7YeYxwlFYPm-8qTeVPbkl6BmSqPLM"},"id":"p9mmWleyY7HR","executionInfo":{"status":"ok","timestamp":1728294897850,"user_tz":-120,"elapsed":34108,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"19ce2347-22d6-461c-a304-e97719b1d521"},"execution_count":null,"outputs":[{"output_type":"display_data","data":{"text/plain":"Output hidden; open in https://colab.research.google.com to view."},"metadata":{}}]},{"cell_type":"markdown","source":["## Dask\n"],"metadata":{"id":"vc-25Gnv-x9N"}},{"cell_type":"code","source":["!pip install dask[dataframe]\n","!pip install memory_profiler"],"metadata":{"id":"uVOUGLxP_dc9"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import os\n","import dask\n","import dask.array as da\n","import dask.dataframe as dd\n","import warnings\n","import memory_profiler\n","\n","from dask.diagnostics import ProgressBar\n","from memory_profiler import memory_usage\n","\n","warnings.filterwarnings('ignore')\n","\n","%load_ext memory_profiler\n","%matplotlib inline"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Wk1JOdJY_JG-","executionInfo":{"status":"ok","timestamp":1727684214478,"user_tz":-120,"elapsed":284,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"c437a124-e6cf-4adf-f1e5-33d10911618b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["The memory_profiler extension is already loaded. To reload it, use:\n","  %reload_ext memory_profiler\n"]}]},{"cell_type":"code","source":["pbar = ProgressBar()\n","pbar.register()"],"metadata":{"id":"3CtHc4tzADz-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["import time\n","\n","def increment(x):\n","    time.sleep(1.0)\n","    return x + 1\n","\n","def double(x):\n","    time.sleep(1.0)\n","    return 2 * x\n","\n","def add(x, y):\n","    time.sleep(1.0)\n","    return x + y"],"metadata":{"id":"a3fdi_wZARz2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["%%time\n","\n","x = increment(1)\n","y = increment(2)\n","z = add(x, y)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dNHPXfG6AVVN","executionInfo":{"status":"ok","timestamp":1727684259486,"user_tz":-120,"elapsed":3335,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"5b0214e2-cf25-4e72-a3a8-b1e0cc26caa6"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["CPU times: user 16 ms, sys: 1.53 ms, total: 17.5 ms\n","Wall time: 3 s\n"]}]},{"cell_type":"code","source":["xd = dask.delayed(increment)(1)\n","yd = dask.delayed(increment)(2)\n","zd = dask.delayed(add)(xd, yd)\n","\n","zd.visualize(rankdir='LR')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":318},"id":"sXEja1cOAi3N","executionInfo":{"status":"ok","timestamp":1727684358757,"user_tz":-120,"elapsed":340,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"f98aa4d0-4e2b-4f74-bd87-aaa588e9de31"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["%%time\n","dask.compute(zd)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Cf5KhiUBA6ds","executionInfo":{"status":"ok","timestamp":1727684412511,"user_tz":-120,"elapsed":2814,"user":{"displayName":"Juan Muelledes","userId":"09474122299495474720"}},"outputId":"68420d2b-ce3b-4997-cf41-aa168197a346"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["[########################################] | 100% Completed | 2.04 s\n","CPU times: user 313 ms, sys: 56.6 ms, total: 369 ms\n","Wall time: 2.53 s\n"]},{"output_type":"execute_result","data":{"text/plain":["(5,)"]},"metadata":{},"execution_count":16}]},{"cell_type":"markdown","source":["## Carga de los datos con Dask, esto est√° preparado para trabajar con multiples datasets Panda. En nuestro caso, podemos cargar los datos de m√°s jugadores."],"metadata":{"id":"QzlApb7hHDbV"}},{"cell_type":"markdown","source":["Comparaci√≥n de acierto vs fallo en 2 puntos\n","Comparaci√≥n de acierto vs fallo en 3 puntos\n","Revisar tendencia descendente de acierto a medida que aumenta la distancia\n","Revisar acierto vs fallo cuando vas ganando vs cuando vas perdiendo\n","\n","Mapa de calor sobre la posicion del jugador en la que tira (ver seg√∫n cuadrante).\n","\n","mapa de calor que representa la correlacion entre el acierto como probabilidad con respecto al cuarto, si va ganando o perdiendo, el tiempo restante, y la diferencia n√∫merica de puntos entre lebron y el equipo enemigo.\n"],"metadata":{"id":"DF-1Andi1zlj"}}]}